{"version":3,"sources":["pages/Todolist/bg.png","util/constants/settingSystem.js","assets/img/download (1).jfif","components/GlobalSetting/LoadingComponent/LoadingComponent.module.css","assets/imgLoading/loading.gif","pages/BaiTapToDoListSaga/bg.png","assets/img/download.jfif","components/GlobalSetting/LoadingComponent/LoadingComponent.js","components/Home/Header/Header.js","pages/About/About.js","pages/BaiTapToDoListSaga/BaiTapToDoListSaga.js","redux/constants/ToDoListConst.js","util/history.js","pages/Contact/Contact.js","pages/CyberBugs/LoginCyberBugs/LoginCyberBugs.js","redux/actions/CyberBugsActions.js","redux/constants/Cyberbugs/Cyberbugs.js","HOC/Modal/SlideDown.js","pages/Login/Login.js","pages/Register/Register.js","pages/DemoHOCModal/DemoHOCModal.js","pages/Detail/Detail.js","pages/Home/Home.js","pages/PageNotFound/PageNotFound.js","pages/Profile/Profile.js","pages/Todolist/Todolist.js","redux/actions/ToDoListAction.js","pages/Todolist/ToDoListRedux.js","pages/Todolist/TodolistRFC.js","templates/HomeTemplate/HomeTemplate.js","templates/HomeTemplate/UserLoginTemplate.js","components/Cyberbugs/Main/ContentMain.js","redux/constants/Cyberbugs/TaskConstants.js","components/Cyberbugs/Main/HeaderMain.js","components/Cyberbugs/Main/InfoMain.js","components/Cyberbugs/MenuCyberbugs.js","redux/constants/Cyberbugs/StatusConstant.js","components/Cyberbugs/ModalCyberBugs.js/ModalCyberBugs.js","redux/constants/Cyberbugs/PriorityConstants.js","redux/constants/Cyberbugs/TaskTypeConstants.js","components/Forms/FormCreateTask/FormCreateTask.js","redux/constants/Cyberbugs/ProjectCyberBugsConstants.js","redux/constants/Cyberbugs/UserConstants.js","components/Cyberbugs/SidebarCyberbugs.js","templates/HomeTemplate/CyberbugsTemplate.js","pages/CyberBugs/ProjectDetail/indexCyberBugs.js","pages/CyberBugs/CreateProject/CreateProject.js","components/Forms/FormEditProject.js/FormEditProject.js","pages/CyberBugs/ProjectManagement/ProjectManagement.js","HOC/CyberbugsHOC/DrawerCyberBugs.js","pages/DemoDragDrop/DemoDragDrop.js","pages/DragAndDropDnD/DragAndDropDnD.js","App.js","serviceWorker.js","redux/reducers/ToDoListReducer.js","redux/reducers/LoadingReducer.js","redux/reducers/ModalReducer.js","services/ToDoListService.js","redux/sagas/ToDoListSaga.js","redux/constants/LoadingConst.js","services/CyberbugsService.js","services/baseService.js","services/UserService.js","redux/sagas/Cyberbugs/UserCyberbugsSaga.js","redux/sagas/Cyberbugs/ProjectCategorySaga.js","services/ProjectService.js","util/Notification/notificationCyberbugs.js","redux/sagas/Cyberbugs/ProjectSaga.js","services/TaskTypeService.js","redux/sagas/Cyberbugs/TaskTypeSaga.js","services/PriorityService.js","redux/sagas/Cyberbugs/PrioritySaga.js","services/TaskService.js","redux/sagas/Cyberbugs/TaskSaga.js","services/StatusService.js","redux/sagas/Cyberbugs/StatusSaga.js","redux/sagas/rootSaga.js","redux/reducers/HistoryReducer.js","redux/reducers/UserCyberBugsReducer.js","redux/reducers/ProjectCategoryReducer.js","redux/reducers/ProjectCyberBugsReducer.js","redux/reducers/DrawerCyberbugs.js","redux/reducers/ProjectReducer.js","redux/reducers/TaskTypeReducer.js","redux/reducers/PriorityReducer.js","redux/reducers/StatusReducer.js","redux/reducers/TaskReducer.js","redux/configStore.js","index.js"],"names":["module","exports","DOMAIN","DOMAIN_CYBERBUG","TOKEN","USER_LOGIN","STATUS_CODE","SUCCESS","NOT_FOUND","SERVER_ERROR","LoadingComponent","useSelector","state","LoadingReducer","isLoading","className","styleLoading","bgLoading","src","require","Header","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","activeClassName","activeStyle","fontWeight","href","aria-haspopup","aria-labelledby","placeholder","About","BaiTapToDoListSaga","props","dispatch","useDispatch","taskList","ToDoListReducer","useState","values","taskName","errors","setState","addTask","e","preventDefault","useEffect","delTask","console","log","onClick","onSubmit","name","onChange","target","value","newValues","newErrors","test","trim","filter","item","status","map","index","key","history","createBrowserHistory","Contact","push","LoginCyberBugsWithFormik","withFormik","mapPropsToValues","email","password","validationSchema","Yup","shape","required","min","max","handleSubmit","setSubmitting","userLogin","singinCyberbugAction","displayName","touched","handleChange","handleBlur","style","height","window","innerHeight","fontSize","width","minWidth","size","prefix","UserOutlined","LockOutlined","htmlType","backgroundColor","color","icon","TwitterOutlined","connect","SlideDown","Component","propsSpring","useSpring","marginTop","from","config","duration","div","Login","userName","passWord","setUserLogin","event","newUserLogin","valid","goBack","localStorage","setItem","JSON","stringify","alert","when","message","location","Register","htmlFor","selected","DemoHOCModal","LoginWithSlideDown","Detail","match","params","path","Home","UserLoginCyberBugsReducer","avatar","PageNotFound","url","Profile","getItem","Todolist","getTaskList","promise","Axios","method","then","result","data","catch","err","response","renderTaskToDo","checkTask","renderTaskToDoDone","rejectTask","res","this","getTaskListApi","a","ToDoListRedux","rejectTaskApi","checkTaskApi","deleteTaskApi","TodolistRFC","HomeTemplate","restParam","render","propsRoute","Sider","Layout","Footer","Content","UserLoginTemplate","Math","round","innerWidth","setSize","onresize","restRoute","backgroundImage","backgroundSize","ContentMain","projectDetail","handleDragEnd","parse","draggableId","projectId","taskId","source","destination","droppableId","taskUpdateStatus","display","onDragEnd","lstTask","taskListDetail","statusId","provided","statusName","ref","innerRef","droppableProps","lstTaskDeTail","task","toString","draggableProps","dragHandleProps","priorityTask","priority","assigness","mem","alt","renderCardTaskList","HeaderMain","aria-current","projectName","InfoMain","ReactHtmlParser","description","members","user","renderAvatar","marginLeft","MenuCyberbugs","Select","Option","ModalCyberBugs","taskDetailModal","TaskReducer","arrStatus","StatusReducer","arrPriority","PriorityReducer","arrTaskType","TaskTypeReducer","ProjectReducer","visibleEditor","setVisibleEditor","historyContent","setHistoryContent","content","setContent","actionType","tabIndex","role","aria-hidden","typeId","tp","taskType","paddingRight","cursor","data-dismiss","jsxDescription","initialValue","init","selector","menubar","plugins","toolbar","onEditorChange","editor","renderDescription","background","marginBottom","userId","options","findIndex","us","label","optionFilterProp","onSelect","userSelected","find","priorityId","originalEstimate","timeTrackingSpent","timeTrackingRemaining","Number","percent","aria-valuenow","aria-valuemin","aria-valuemax","justifyContent","renderTimeTracking","children","i","frmCreateTask","enableReinitialize","arrProject","listUserAsign","taskObject","ProjectCyberBugsReducer","arrUser","userOptions","setFieldValue","setValues","React","timeTracking","setTimetracking","submitFunction","keyWord","idProject","project","statusItem","mode","defaultValue","SidebarCyberbugs","collapsed","trigger","collapsible","BarsOutlined","theme","defaultSelectedKeys","Item","PlusOutlined","title","SearchOutlined","CyberbugsTemplate","IndexCyberBugs","createProjectForm","categoryId","arrProjectCategory","newProject","ProjectCategoryReducer","projectCategoryName","EditProjectForm","projectEdit","prjectUpdate","disabled","ProjectManagement","projectList","userSearch","setValue","searchRef","useRef","filteredInfo","sortedInfo","columns","dataIndex","sorter","item2","item1","sortDirections","text","record","projectName1","toLowerCase","categoryName1","categoryName","creator","creator1","slice","member","placement","borderRadius","userProject","length","valueSelect","option","onSearch","current","clearTimeout","setTimeout","projectEditModel","FormOutlined","onConfirm","okText","cancelText","DeleteOutlined","order","columnKey","rowKey","dataSource","pagination","filters","DrawerCyberBugs","drawerReducer","visible","ComponentContentDrawer","callBackSubmit","onClose","bodyStyle","paddingBottom","footer","textAlign","marginRight","DemoDragDrop","setTaskList","tagDrag","tagDragEnter","bottom","reset","set","handleDragStart","handleDragEnter","taskDragEnter","taskListUpdate","indexDragTag","indexDragEnter","temp","onDragOver","stopPropagation","onDrop","cssDragTag","position","interpolate","numBottom","onDragStart","onDragEnter","draggable","DragAndDropDnD","toDo","items","inProgress","done","itemCopy","splice","_","statusTask","App","useHistory","exact","LoginCyberBugs","indexCyberBugs","CreateProject","Boolean","hostname","initialState","stateDefault","toDoListService","getTaskApi","addTaskApi","checkDoneTask","getTaskApiAction","theoDoiActionGetTaskApi","addTaskApiAction","theoDoiActionAddTaskApi","theoDoiActionDeleteTask","checkDoneTaskApi","theoDoiDoneTask","theoDoiRejectTask","action","put","call","delay","takeLatest","default","cyberbugsService","headers","projectUpdate","baseService","model","post","get","delete","userService","getUser","assignUserProject","deleteUserFromProject","getUserByProjectId","signinSaga","theoDoiSignin","getUserSaga","theoDoiGetUser","addUserProjectSaga","theoDoiAddUserProject","removeUserProjectSaga","theoDoiRemoveUserProject","getUserByProjectIdSaga","theoDoiGetUserByProjectIdSaga","accessToken","lstUserSearch","statusCode","getAllProjectCategorySaga","theoDoigetAllProjectCategory","projectService","getAllProject","deleteProject","getProjectDetail","notifiFunction","notification","createProjectSaga","theoDoiCreateProjectSaga","getListProjectSaga","theoDoiGetListProjectSaga","updateProjectSaga","theoDoiUpdateProjectSaga","deleteProjectSaga","theoDoiDeleteProject","getProjectDetailSaga","theoDoiGetProjectDetail","getProjectAllSaga","theoDoiGetAllProjectSaga","taskTypeService","getAllTaskType","getAllTaskTypeSaga","theoDoiGetAllTaskTypeSaga","priorityService","getAllPriority","getAllPrioritySaga","theoDoiGetAllPriority","taskService","createTask","getTaskDetail","updateStatusTask","taskStatusUpdate","updateTask","taskUpdate","createTaskSaga","theoDoiCreateTaskSaga","getTaskDetailSaga","theoDoiGetTaskDetailSaga","updateTaskStatusSaga","theoDoiUpdateTaskStatusSaga","updateTaskSaga","theoDoiUpdateTask","handleChangePostApi","theoDoiHandleChangePostApi","select","taskUpdateApi","statusService","getAllStatus","getAllStatusSaga","theoDoiGetAllStatusSaga","rootSaga","all","ToDoListSaga","Cyberbugs","ProjectCategorySaga","ProjectSaga","StatusSaga","TaskTypeSaga","PrioritySaga","TaskSaga","historyState","usLogin","propsValue","middleWareSaga","createMiddleWareSaga","rootReducer","combineReducers","ModalReducer","HistoryReducer","store","createStore","applyMiddleware","reduxThunk","run","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d1710711.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.9b2b410b.png\";","export const DOMAIN = 'http://svcy.myclass.vn/api';\n\nexport const DOMAIN_CYBERBUG = 'https://casestudy.cyberlearn.vn/api';\n\nexport const TOKEN = 'ACCESSTOKEN';\nexport const USER_LOGIN = 'USER_LOGIN';\n\nexport const STATUS_CODE = {\n    SUCCESS : 200,\n    NOT_FOUND: 404,\n    SERVER_ERROR:500\n}\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/download (1).e96d3ef9.jfif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgLoading\":\"LoadingComponent_bgLoading__1OZSb\"};","module.exports = __webpack_public_path__ + \"static/media/loading.504b535c.gif\";","module.exports = __webpack_public_path__ + \"static/media/bg.9b2b410b.png\";","module.exports = __webpack_public_path__ + \"static/media/download.1c8cee9f.jfif\";","import React from 'react'\nimport styleLoading from './LoadingComponent.module.css';\nimport { useSelector } from 'react-redux'\n\nexport default function LoadingComponent() {\n\n    const { isLoading } = useSelector(state => state.LoadingReducer)\n\n    if (isLoading) {\n        return (\n            <div className={styleLoading.bgLoading}>\n                <img src={require('../../../assets/imgLoading/loading.gif')} />\n            </div>\n        )\n    } else {\n        return ''\n    }\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport './Header.css'\nexport default function Header() {\n\n\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            <NavLink className=\"navbar-brand\" to=\"/\">Cyberlearn</NavLink>\n            <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" />\n            <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/home\">Home </NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/about\">About</NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/contact\">Contact</NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/login\">Login</NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/projectmanagement\">Project management</NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/profile\">profile</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink activeClassName=\"activeNavItem\" activeStyle={{ fontWeight: 'bold' }} className=\"nav-link\" to=\"/demohocmodal\">Demo HOC </NavLink>\n                    </li>\n                    <li className=\"nav-item dropdown\">\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdownId\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Bài tập</a>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\n                            <NavLink className=\"dropdown-item\" to=\"/todolistrfc\">To do list rfc</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/todolistrcc\">To do list rcc</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/todolistredux\">To do list redux</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/todolistsaga\">To do list saga</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/dragdrop\">DemoDragDrop</NavLink>\n                            <NavLink className=\"dropdown-item\" to=\"/demodragdropdnd\">DemoDragDropDnD</NavLink>\n                        </div>\n                    </li>\n\n                </ul>\n                <form className=\"form-inline my-2 my-lg-0\">\n                    <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" />\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n                </form>\n            </div>\n        </nav>\n\n    )\n}\n\n\n\n","import React from 'react'\n\nexport default function About() {\n    return (\n        <div>\n            About\n        </div>\n    )\n}\n","import Axios from 'axios';\nimport React, { useEffect, useState } from 'react'\n\nimport {useDispatch,useSelector} from 'react-redux';\nimport { ADD_TASK_API, CHECK_TASK_API, DELETE_TASK_API, GET_TASKLIST_API, REJECT_TASK_API } from '../../redux/constants/ToDoListConst';\n\n\nexport default function BaiTapToDoListSaga(props) {\n\n    const dispatch = useDispatch(); \n    const {taskList} = useSelector(state => state.ToDoListReducer)\n\n\n    let [state, setState] = useState({\n        taskList: [],\n        values: {\n            taskName: ''\n        },\n        errors: {\n            taskName: ''\n        }\n    });\n\n    const handleChange = (e) => {\n        let { value, name } = e.target;\n        let newValues = { ...state.values };\n\n        newValues = { ...newValues, [name]: value };\n\n        let newErrors = { ...state.errors };\n\n        let regexString = /^[a-z A-Z]+$/;\n\n        if (!regexString.test(value) || value.trim() === '') {\n            newErrors[name] = name + ' invalid !';\n        } else {\n            newErrors[name] = '';\n        }\n\n\n        setState({\n            ...state,\n            values: newValues,\n            errors: newErrors\n        })\n    }\n\n\n    const getTaskList = () => {\n        //Dispatch action saga\n        dispatch({\n            type:GET_TASKLIST_API,\n           \n        })\n    }\n\n    const addTask = (e) => {\n        e.preventDefault();\n        dispatch({\n            type:ADD_TASK_API,\n            taskName: state.values.taskName\n        })\n    }\n\n    useEffect(() => {\n        //Gọi hàm getTaskList\n        getTaskList();\n\n        return () => {\n\n        }\n    }, [])\n\n    //Xử lý reject task\n    const rejectTask = (taskName)=>{\n        dispatch({\n            type:REJECT_TASK_API,\n            taskName\n        })\n\n    }\n\n    //Xử lý done task\n   const  checkTask = (taskName) => {\n      dispatch({\n          type:CHECK_TASK_API,\n          taskName\n      })\n    }\n\n\n    //Hàm xử lý xóa task\n    const delTask = (taskName) => {\n        console.log(taskName)\n        dispatch({\n            type:DELETE_TASK_API,\n            taskName:taskName\n        })\n    }\n\n\n    const renderTaskToDo = () => {\n        return taskList.filter(item => !item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        checkTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-check-circle\" />\n                        <i className=\"fas fa-check-circle\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    const renderTaskToDoDone = () => {\n        return taskList.filter(item => item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        rejectTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-undo\" />\n                        <i className=\"fas fa-undo\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    return (\n        <div className=\"card\">\n            <button className=\"btn btn-success\" onClick={()=>{\n                dispatch({\n                    type:'getTaskApiAction'\n                })\n            }}>Dispatch action saga getTaskAPI</button>\n            <div className=\"card__header\">\n                <img src={require('./bg.png')} />\n            </div>\n            {/* <h2>hello!</h2> */}\n            <form className=\"card__body\" onSubmit={addTask}>\n                <div className=\"card__content\">\n                    <div className=\"card__title\">\n                        <h2>My Tasks</h2>\n                        <p>September 9,2020</p>\n                    </div>\n                    <div className=\"card__add\">\n                        <input id=\"newTask\" name=\"taskName\" type=\"text\" placeholder=\"Enter an activity...\" onChange={handleChange} />\n                        <button id=\"addItem\" type=\"submit\" onClick={addTask}>\n                            <i className=\"fa fa-plus\" />\n                        </button>\n                    </div>\n                    <div className=\"card__todo\">\n                        {/* Uncompleted tasks */}\n                        <ul className=\"todo\" id=\"todo\">\n                            {renderTaskToDo()}\n                        </ul>\n                        {/* Completed tasks */}\n                        <ul className=\"todo\" id=\"completed\">\n                            {renderTaskToDoDone()}\n                        </ul>\n                    </div>\n                </div>\n            </form>\n        </div>\n\n    )\n}\n","//-----------action----------\nexport const GET_TASK_API = 'GET_TASK_API';\n\n//---------------saga--------------\n\nexport const GET_TASKLIST_API = 'GET_TASKLIST_API';\nexport const ADD_TASK_API = 'ADD_TASK_API';\nexport const CHECK_TASK_API = 'CHECK_TASK_API';\nexport const DELETE_TASK_API = 'DELETE_TASK_API';\nexport const REJECT_TASK_API = 'REJECT_TASK_API';\n\n\n\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n","import React from 'react'\nimport { history } from '../../util/history'\n\nexport default function Contact() {\n    return (\n        <div>\n            liên hệ\n          <button onClick={()=>{history.push('/demohocmodal')}}>123</button>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { Button, Input } from 'antd';\nimport { UserOutlined, LockOutlined, FacebookOutlined,TwitterOutlined } from '@ant-design/icons';\nimport {withFormik,Formik} from 'formik'\nimport * as Yup from 'yup';\nimport {connect} from 'react-redux';\nimport { USER_SIGNIN_API } from '../../../redux/constants/Cyberbugs/Cyberbugs';\nimport { singinCyberbugAction } from '../../../redux/actions/CyberBugsActions';\nfunction LoginCyberBugs(props) {\n\n\n\n    const {\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n      } = props;\n\n    return (\n        <form onSubmit={handleSubmit} className=\"container\" style={{ height: window.innerHeight }} >\n            <div className=\"d-flex flex-column justify-content-center align-items-center\" style={{ height: window.innerHeight }} >\n                <h3 className=\"text-center\" style={{fontWeight:300,fontSize:35}}>Login cyberbugs</h3>\n                <div className=\"d-flex mt-3\" >\n                    <Input onChange={handleChange} style={{ width: '100%', minWidth: 300 }} name=\"email\" size=\"large\" placeholder=\"email\" prefix={<UserOutlined />} />     \n                </div> \n                <div className=\"text-danger\">{errors.email}</div>\n                <div className=\"d-flex mt-3\">\n                    <Input onChange={handleChange} style={{ width: '100%', minWidth: 300 }} type=\"password\" name=\"password\" size=\"large\" placeholder=\"password\" prefix={<LockOutlined />} />\n                </div>\n                <div className=\"text-danger\">{errors.password}</div>\n\n                <Button htmlType=\"submit\" size=\"large\" style={{ minWidth: 300, backgroundColor: 'rgb(102,117,223)', color: '#fff' }} className=\"mt-5\">Login</Button>\n\n \n                <div className=\"social mt-3 d-flex\">\n                    <Button style={{backgroundColor:'rgb(59,89,152)'}}  shape=\"circle\" size={\"large\"}>\n                        <span className=\"font-weight-bold\" style={{color:'#fff'}} >F</span>\n                    </Button>\n                    <Button type=\"primary ml-3\" shape=\"circle\" icon={<TwitterOutlined />} size={\"large\"}>\n\n                    </Button>\n                </div>\n            </div>\n\n        </form>\n    )\n}\n\nconst LoginCyberBugsWithFormik =  withFormik({\n    mapPropsToValues: () => ({\n        email: '', \n        password:''\n    }),\n    validationSchema: Yup.object().shape({\n        email:Yup.string().required('Email is required!').email('email is invalid!'),\n        password:Yup.string().min(6,'password must have min 6 characters').max(32,'password  have max 32 characters')\n\n    }),\n    handleSubmit: ({email,password}, {props, setSubmitting }) => {\n\n        // let action = {\n        //     type:USER_SIGNIN_API,\n        //     userLogin: {\n        //         email:values.email,\n        //         password:values.password\n        //     }\n        // }\n\n        setSubmitting(true);\n        props.dispatch(singinCyberbugAction(email,password));\n        \n        // console.log(props)\n        // console.log(values);\n\n    },\n    displayName: 'LoginCyberBugs',\n  })(LoginCyberBugs);\n\n\n\n\nexport default connect ()(LoginCyberBugsWithFormik);","import { USER_SIGNIN_API } from \"../constants/Cyberbugs/Cyberbugs\"\n\n\n\nexport const singinCyberbugAction = (email, password) => {\n    return {\n        type: USER_SIGNIN_API,\n        userLogin: {\n            email: email,\n            password: password\n        }\n    }\n}","export const USER_SIGNIN_API = 'USER_SIGNIN_API';\n\n\n\n//------------------login ------\nexport const USLOGIN = 'USLOGIN';\n\n\n//-------------get project category ---------\n\n\nexport const GET_ALL_PROJECT_CATEGORY_SAGA = 'GET_ALL_PROJECT_CATEGORY_SAGA';\n\n\nexport const GET_ALL_PROJECT_CATEGORY = 'GET_ALL_PROJECT_CATEGORY';","import React from 'react'\nimport { useSpring, animated } from 'react-spring'\n\n\nexport default function SlideDown(Component) {\n\n    const propsSpring = useSpring({\n        to: {\n            marginTop: '0'\n        }, from: {\n            marginTop: '-100px'\n\n        },config: {\n            duration:500\n        }\n    })\n\n\n    return (\n        <div>\n            <animated.div style={propsSpring}>\n                <Component />\n            </animated.div>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { Prompt } from 'react-router-dom';\n\n\n\n\nexport default function Login(props) {\n\n    const [userLogin,setUserLogin] = useState({userName:'',passWord:'',status:false})\n\n\n    console.log(userLogin)\n    const handleChange = (event) => {\n        const {name,value} = event.target;\n\n        const newUserLogin = {\n            ...userLogin,\n            [name]:value\n        };\n\n\n        let valid = true;\n        for(let key in newUserLogin) {\n            if(key !== 'status') {\n                if(newUserLogin[key].trim()===''){\n                    valid = false;\n                }\n            }\n        }\n\n        if(!valid) {\n            newUserLogin.status = true;\n        }else {\n            newUserLogin.status = false;\n        }\n\n        setUserLogin(newUserLogin);\n    }\n\n    const handleLogin = (event) => {\n        event.preventDefault();\n        if(userLogin.userName === 'cyberlearn' && userLogin.passWord==='cyberlearn') {\n            //Thành công thì chuyển về trang trước đó\n            // props.history.goBack();\n            //Chuyển đến trang chỉ định sau khi xử lý\n            // Chuyển hướng đến path tương ứng\n            //  props.history.push('/home');\n            //replace thay đổi nội dung path tương ứng\n            // props.history.replace('/home');\n            props.history.goBack();\n            localStorage.setItem('userLogin',JSON.stringify(userLogin))\n\n        }else {\n            alert('Login fail !')\n            return;\n        }\n    }\n\n    return (\n        <form className=\"container\" onSubmit={handleLogin}>\n            <h3 className=\"display-4\">Login</h3>\n            <div className=\"form-group\">\n                <p>User Name</p>\n                <input name=\"userName\" className=\"form-control\" onChange={handleChange}/>\n            </div>\n            <div className=\"form-group\">\n                <p>Password</p>\n                <input name=\"passWord\" className=\"form-control\" onChange={handleChange}/>\n            </div>\n            <div className=\"form-group\">\n               <button className=\"btn btn-success\">Đăng nhập</button>\n            </div>\n            <Prompt when={userLogin.status} message={(location) => {\n                return 'Bạn có chắc muốn rời khỏi trang này !'\n            }} />\n        </form>\n    )\n}\n","import React from 'react'\n\nexport default function Register() {\n    return (\n        <form>\n            <div className=\"form-row\">\n                <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"inputEmail4\">Email</label>\n                    <input type=\"email\" className=\"form-control\" id=\"inputEmail4\" placeholder=\"Email\" />\n                </div>\n                <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"inputPassword4\">Password</label>\n                    <input type=\"password\" className=\"form-control\" id=\"inputPassword4\" placeholder=\"Password\" />\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"inputAddress\">Address</label>\n                <input type=\"text\" className=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\" />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"inputAddress2\">Address 2</label>\n                <input type=\"text\" className=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\" />\n            </div>\n            <div className=\"form-row\">\n                <div className=\"form-group col-md-6\">\n                    <label htmlFor=\"inputCity\">City</label>\n                    <input type=\"text\" className=\"form-control\" id=\"inputCity\" />\n                </div>\n                <div className=\"form-group col-md-4\">\n                    <label htmlFor=\"inputState\">State</label>\n                    <select id=\"inputState\" className=\"form-control\">\n                        <option selected>Choose...</option>\n                        <option>...</option>\n                    </select>\n                </div>\n                <div className=\"form-group col-md-2\">\n                    <label htmlFor=\"inputZip\">Zip</label>\n                    <input type=\"text\" className=\"form-control\" id=\"inputZip\" />\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <div className=\"form-check\">\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" />\n                    <label className=\"form-check-label\" htmlFor=\"gridCheck\">\n                        Check me out\n      </label>\n                </div>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Sign in</button>\n        </form>\n\n    )\n}\n","import React from 'react'\nimport {useDispatch} from 'react-redux'\nimport SlideDown from '../../HOC/Modal/SlideDown';\nimport Login from '../Login/Login';\nimport Register from '../Register/Register';\n\n\n\n\nexport default function DemoHOCModal() {\n    const LoginWithSlideDown = () =>  new SlideDown(Login);\n\n    const dispatch = useDispatch();\n\n    return (\n        <div>\n            {/* Button trigger modal */}\n            <button onClick={() => {\n                dispatch({\n                    type:'OPEN_FORM',\n                    Component: <Login />\n                })\n\n\n            }} type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" data-target=\"#modelId\">\n                Đăng nhập\n            </button>\n\n            <button onClick={() => {\n                dispatch({\n                    type:'OPEN_FORM',\n                    Component:<Register />\n                })\n\n            }} type=\"button\" className=\"btn btn-primary btn-lg\" data-toggle=\"modal\" data-target=\"#modelId\">\n                Đăng ký\n            </button>\n\n            <LoginWithSlideDown />\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Detail(props) {\n\n    return (\n        <div>\n            Giá trị tham số: {props.match.params.id}\n            <br />\n            Path name hiện tại: {props.match.path}\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nexport default function Home(props) {\n    const userLogin = useSelector(state => state.UserLoginCyberBugsReducer.userLogin)\n    return (\n        <div>\n            {userLogin?.name}\n            <img src={userLogin?.avatar} />\n        </div>\n    )\n}\n\n\n\n","import React from 'react'\n\nexport default function PageNotFound(props) {\n    return (\n        <div>\n            Không tìm thấy trang {props.match.url}\n        </div>\n    )\n}\n","import React from 'react'\nimport { Redirect } from 'react-router-dom';\n\nexport default function Profile(props) {\n\n\n    if (localStorage.getItem('userLogin')) {\n        return (\n            <div>\n                profile\n            </div>\n        )\n    }else {\n        alert('Vui lòng đăng nhập để vào trang này !');\n        return <Redirect to=\"/login\" />\n    }\n}\n","import React, { Component } from 'react'\nimport Axios from 'axios'\nimport style from './Todolist.css'\n\nexport default class Todolist extends Component {\n\n    state = {\n        taskList: [],\n        values: {\n            taskName: ''\n        },\n        errors: {\n            taskName: ''\n        }\n    }\n\n    getTaskList = () => {\n        let promise = Axios({\n            url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\n            method: 'GET'\n        });\n\n        promise.then((result) => {\n            console.log(result.data);\n            //Nếu gọi api lấy về kết quả thành công \n            //=> set lại state của component\n            this.setState({\n                taskList: result.data\n            })\n\n            console.log('thành công')\n        });\n\n\n        promise.catch((err) => {\n            console.log('thất bại')\n\n            console.log(err.response.data)\n        });\n    }\n\n    renderTaskToDo = () => {\n        return this.state.taskList.filter(item => !item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        this.delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={()=>{\n                        this.checkTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-check-circle\" />\n                        <i className=\"fas fa-check-circle\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n    \n    renderTaskToDoDone = () => {\n        return this.state.taskList.filter(item => item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        this.delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button  type=\"button\" className=\"complete\" onClick={()=>{\n                        this.rejectTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-undo\" />\n                        <i className=\"fas fa-undo\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n    //Xử lý reject task\n    rejectTask = (taskName)=>{\n        let promise = Axios({\n            url:`http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\n            method:'PUT'\n        });\n        \n        promise.then(res=>{\n            alert(res.data);\n            this.getTaskList();\n        });\n\n        promise.catch(err=>{\n            alert(err.response.data);\n        })\n\n    }\n\n    //Xử lý done task\n    checkTask = (taskName) => {\n        let promise = Axios({\n            url:`http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\n            method:'PUT'\n        });\n\n        promise.then(res=>{\n            alert(res.data);\n            this.getTaskList();\n        });\n\n        promise.catch(err=>{\n            alert(err.response.data);\n        })\n    }\n\n\n    //Hàm xử lý xóa task\n    delTask = (taskName) => {\n        let promise = Axios({\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\n            method: 'DELETE'\n        });\n\n        promise.then(result => {\n            alert(result.data);\n            this.getTaskList();\n        });\n\n        promise.catch(errors => {\n            alert(errors.response.data)\n        })\n    }\n\n\n    //Hàm sẽ tự động thực thi sau khi nội dung component được render\n    componentDidMount() {\n        this.getTaskList();\n    }\n\n\n    handleChange = (e) => {\n        let { value, name } = e.target;\n        console.log(value, name);\n        let newValues = { ...this.state.values };\n\n        newValues = { ...newValues, [name]: value };\n\n        let newErrors = { ...this.state.errors };\n\n        let regexString = /^[a-z A-Z]+$/;\n\n        if (!regexString.test(value) || value.trim() === '') {\n            newErrors[name] = name + ' invalid !';\n        } else {\n            newErrors[name] = '';\n        }\n\n\n        this.setState({\n            ...this.state,\n            values: newValues,\n            errors: newErrors\n        })\n    }\n\n    addTask = (e) => {\n        e.preventDefault(); //Dừng sự kiện submit form\n        console.log(this.state.values.taskName);\n\n        let promise = Axios({\n            url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\n            method: 'POST',\n            data: { taskName: this.state.values.taskName }\n        });\n\n        //Xử lý thành công\n        promise.then(result => {\n            // alert(result.data);\n            this.getTaskList();\n\n        })\n\n        //Xử lý thất bại\n        promise.catch(errors => {\n            alert(errors.response.data)\n\n        })\n\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.addTask}>\n                {/* <button onClick={() => { this.getTaskList() }}>Get task list</button> */}\n                <div className=\"card\">\n                    <div className=\"card__header\">\n                        <img src={require('./bg.png')} />\n                    </div>\n                    {/* <h2>hello!</h2> */}\n                    <div className=\"card__body\">\n                        <div className=\"card__content\">\n                            <div className=\"form-group\">\n                                <div className=\"card__title\">\n                                    <h2>My Tasks</h2>\n                                    <p>September 9,2020</p>\n                                </div>\n                                <div className=\"card__add\">\n                                    <input name=\"taskName\" onChange={this.handleChange} id=\"newTask\" type=\"text\" placeholder=\"Enter an activity...\" />\n\n                                    <button id=\"addItem\" onClick={this.addTask}>\n                                        <i className=\"fa fa-plus\" />\n                                    </button>\n                                </div>\n                                <span className=\"text text-danger\">{this.state.errors.taskName}</span>\n                            </div>\n\n                            <div className=\"card__todo form-group\">\n                                {/* Uncompleted tasks */}\n                                <ul className=\"todo\" id=\"todo\">\n                                    {this.renderTaskToDo()}\n                                </ul>\n                                {/* Completed tasks */}\n                                <ul className=\"todo\" id=\"completed\">\n                                    {this.renderTaskToDoDone()}\n\n                                    {/* <li>\n                                    <span>Ăn sáng</span>\n                                    <div className=\"buttons\">\n                                        <button className=\"remove\">\n                                            <i className=\"fa fa-trash-alt\" />\n                                        </button>\n                                        <button className=\"complete\">\n                                            <i className=\"far fa-check-circle\" />\n                                            <i className=\"fas fa-check-circle\" />\n                                        </button>\n                                    </div>\n                                </li> */}\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n","import Axios from \"axios\";\nimport Profile from \"../../pages/Profile/Profile\";\nimport { GET_TASK_API } from \"../constants/ToDoListConst\";\n\n\n//Action có 2 loại\n//Action thực thi ngay làm thay đổi reducer (action 1)\n//Action phải thực hiện xử lý rồi mới gọi action 1 thực thi (async action)\n\nexport const getTaskListApi = () => {\n\n    //Tiền xử lý dữ liệu => xử lý function \n    return async dispatch => {\n\n        try {\n            let { data, status, ...res } = await Axios({\n                url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\n                method: 'GET'\n            });\n            if (status === 200) {\n                dispatch({\n                    type: GET_TASK_API,\n                    taskList: data\n                })\n            }\n        } catch (err) {\n            console.log(err.response.data)\n        }\n\n        // console.log('promise',res.data)\n        // promise.then((result) => {\n        //     console.log(result.data);\n        //     //Nếu gọi api lấy về kết quả thành công \n        //     //=> set lại state của component\n        //     dispatch({\n        //         type: GET_TASK_API,\n        //         taskList: result.data\n        //     })\n\n        //     console.log('thành công')\n        // });\n\n\n        // promise.catch((err) => {\n        //     console.log('thất bại')\n        //     console.log(err.response.data)\n        // });\n    }\n}\n\n\n\nexport const addTaskApi = (taskName) => {\n    return async dispatch => {\n\n        try {\n            //Xử lý trước khi dispatch\n            let {status,data} = await Axios({\n                url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\n                method: 'POST',\n                data: { taskName: taskName }\n            });\n            // console.log('res',res)\n            if (status === 200) {\n                dispatch(getTaskListApi())\n            }\n        }catch(err){\n            console.log(err.response.data);\n        }\n        // //Xử lý thành công\n        // promise.then(result => {\n        //     // alert(result.data);\n        //     dispatch(getTaskListApi());\n\n        // })\n\n        // //Xử lý thất bại\n        // promise.catch(errors => {\n        //     alert(errors.response.data)\n\n        // })\n\n\n    }\n}\n\n\nexport const deleteTaskApi = (taskName) => {\n    return dispatch => {\n        let promise = Axios({\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\n            method: 'DELETE'\n        });\n\n        promise.then(result => {\n            //Sau khi thực hiện api gọi phương thức dispatchAction get TaskListApi để load lại task\n            dispatch(getTaskListApi())\n        });\n\n        promise.catch(errors => {\n            alert(errors.response.data)\n        })\n    }\n}\n\nexport const checkTaskApi = (taskName) => {\n    return dispatch => {\n        let promise = Axios({\n            url: `http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\n            method: 'PUT'\n        });\n\n        promise.then(res => {\n            dispatch(getTaskListApi())\n        });\n\n        promise.catch(err => {\n            alert(err.response.data);\n        })\n    }\n}\n\n\nexport const rejectTaskApi = (taskName) => {\n    return dispatch => {\n        let promise = Axios({\n            url: `http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\n            method: 'PUT'\n        });\n\n        promise.then(res => {\n            alert(res.data);\n            dispatch(getTaskListApi());\n        });\n\n        promise.catch(err => {\n            alert(err.response.data);\n        })\n    }\n}\n\n\n\n\n","import Axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport {useSelector,useDispatch} from 'react-redux'\nimport { addTaskApi, deleteTaskApi, getTaskListApi,checkTaskApi, rejectTaskApi } from '../../redux/actions/ToDoListAction';\nimport { GET_TASK_API } from '../../redux/constants/ToDoListConst';\n\n\nexport default function ToDoListRedux(props) {\n    \n    //Lấy tasklist từ redux về\n    const {taskList} = useSelector(state => state.ToDoListReducer);\n    const dispatch = useDispatch();\n\n    let [state, setState] = useState({\n     \n        values: {\n            taskName: ''\n        },\n        errors: {\n            taskName: ''\n        }\n    });\n\n    const handleChange = (e) => {\n        let { value, name } = e.target;\n        let newValues = { ...state.values };\n\n        newValues = { ...newValues, [name]: value };\n\n        let newErrors = { ...state.errors };\n\n        let regexString = /^[a-z A-Z]+$/;\n\n        if (!regexString.test(value) || value.trim() === '') {\n            newErrors[name] = name + ' invalid !';\n        } else {\n            newErrors[name] = '';\n        }\n\n\n        setState({\n            ...state,\n            values: newValues,\n            errors: newErrors\n        })\n    }\n\n\n    const getTaskList = () => {\n       dispatch(getTaskListApi())\n    }\n\n    const addTask = (e) => {\n        e.preventDefault(); //Dừng sự kiện submit form\n        console.log(state.values.taskName);\n\n        //Xử lý nhận dữ liệu từ người dùng nhập => gọi action addTaskApi()\n        dispatch(addTaskApi(state.values.taskName))\n       \n    }\n\n    useEffect(() => {\n        getTaskList();\n\n\n        return () => {\n\n        }\n    }, [])\n\n    //Xử lý reject task\n    const rejectTask = (taskName)=>{\n        dispatch(rejectTaskApi(taskName));\n\n    }\n\n    //Xử lý done task\n   const checkTask = (taskName) => {\n        dispatch(checkTaskApi(taskName))\n    }\n\n\n    //Hàm xử lý xóa task\n    const delTask = (taskName) => {\n        dispatch(deleteTaskApi(taskName))\n    }\n\n\n    const renderTaskToDo = () => {\n        return taskList.filter(item => !item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        checkTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-check-circle\" />\n                        <i className=\"fas fa-check-circle\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    const renderTaskToDoDone = () => {\n        return taskList.filter(item => item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        rejectTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-undo\" />\n                        <i className=\"fas fa-undo\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    return (\n        <div className=\"card\">\n            <div className=\"card__header\">\n                <img src={require('./bg.png')} />\n            </div>\n            {/* <h2>hello!</h2> */}\n            <form className=\"card__body\" onSubmit={addTask}>\n                <div className=\"card__content\">\n                    <div className=\"card__title\">\n                        <h2>My Tasks</h2>\n                        <p>September 9,2020</p>\n                    </div>\n                    <div className=\"card__add\">\n                        <input id=\"newTask\" name=\"taskName\" type=\"text\" placeholder=\"Enter an activity...\" onChange={handleChange} />\n                        <button id=\"addItem\" type=\"submit\" onClick={addTask}>\n                            <i className=\"fa fa-plus\" />\n                        </button>\n                    </div>\n                    <div className=\"card__todo\">\n                        {/* Uncompleted tasks */}\n                        <ul className=\"todo\" id=\"todo\">\n                            {renderTaskToDo()}\n                        </ul>\n                        {/* Completed tasks */}\n                        <ul className=\"todo\" id=\"completed\">\n                            {renderTaskToDoDone()}\n                        </ul>\n                    </div>\n                </div>\n            </form>\n        </div>\n\n    )\n\n\n}\n","import Axios from 'axios';\nimport React, { useEffect, useState } from 'react'\n\nexport default function TodolistRFC(props) {\n\n    let [state, setState] = useState({\n        taskList: [],\n        values: {\n            taskName: ''\n        },\n        errors: {\n            taskName: ''\n        }\n    });\n\n    const handleChange = (e) => {\n        let { value, name } = e.target;\n        let newValues = { ...state.values };\n\n        newValues = { ...newValues, [name]: value };\n\n        let newErrors = { ...state.errors };\n\n        let regexString = /^[a-z A-Z]+$/;\n\n        if (!regexString.test(value) || value.trim() === '') {\n            newErrors[name] = name + ' invalid !';\n        } else {\n            newErrors[name] = '';\n        }\n\n\n        setState({\n            ...state,\n            values: newValues,\n            errors: newErrors\n        })\n    }\n\n\n    const getTaskList = () => {\n        let promise = Axios({\n            url: 'http://svcy.myclass.vn/api/ToDoList/GetAllTask',\n            method: 'GET'\n        });\n\n        promise.then((result) => {\n            console.log(result.data);\n            //Nếu gọi api lấy về kết quả thành công \n            //=> set lại state của component\n            setState({\n                ...state,\n                taskList: result.data\n            })\n\n            console.log('thành công')\n        });\n\n\n        promise.catch((err) => {\n            console.log('thất bại')\n\n            console.log(err.response.data)\n        });\n    }\n\n    const addTask = (e) => {\n        e.preventDefault(); //Dừng sự kiện submit form\n        console.log(state.values.taskName);\n\n        let promise = Axios({\n            url: 'http://svcy.myclass.vn/api/ToDoList/AddTask',\n            method: 'POST',\n            data: { taskName: state.values.taskName }\n        });\n\n        //Xử lý thành công\n        promise.then(result => {\n            // alert(result.data);\n            getTaskList();\n\n        })\n\n        //Xử lý thất bại\n        promise.catch(errors => {\n            alert(errors.response.data)\n\n        })\n    }\n\n    useEffect(() => {\n        getTaskList();\n\n\n        return () => {\n\n        }\n    }, [])\n\n    //Xử lý reject task\n    const rejectTask = (taskName)=>{\n        let promise = Axios({\n            url:`http://svcy.myclass.vn/api/ToDoList/rejectTask?taskName=${taskName}`,\n            method:'PUT'\n        });\n        \n        promise.then(res=>{\n            alert(res.data);\n            getTaskList();\n        });\n\n        promise.catch(err=>{\n            alert(err.response.data);\n        })\n\n    }\n\n    //Xử lý done task\n   const  checkTask = (taskName) => {\n        let promise = Axios({\n            url:`http://svcy.myclass.vn/api/ToDoList/doneTask?taskName=${taskName}`,\n            method:'PUT'\n        });\n\n        promise.then(res=>{\n            alert(res.data);\n            getTaskList();\n        });\n\n        promise.catch(err=>{\n            alert(err.response.data);\n        })\n    }\n\n\n    //Hàm xử lý xóa task\n    const delTask = (taskName) => {\n        let promise = Axios({\n            url: `http://svcy.myclass.vn/api/ToDoList/deleteTask?taskName=${taskName}`,\n            method: 'DELETE'\n        });\n\n        promise.then(result => {\n            alert(result.data);\n            getTaskList();\n        });\n\n        promise.catch(errors => {\n            alert(errors.response.data)\n        })\n    }\n\n\n    const renderTaskToDo = () => {\n        return state.taskList.filter(item => !item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        checkTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-check-circle\" />\n                        <i className=\"fas fa-check-circle\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    const renderTaskToDoDone = () => {\n        return state.taskList.filter(item => item.status).map((item, index) => {\n            return <li key={index}>\n                <span>{item.taskName}</span>\n                <div className=\"buttons\">\n                    <button className=\"remove\" type=\"button\" onClick={() => {\n                        delTask(item.taskName)\n                    }}>\n                        <i className=\"fa fa-trash-alt\" />\n                    </button>\n                    <button type=\"button\" className=\"complete\" onClick={() => {\n                        rejectTask(item.taskName)\n                    }}>\n                        <i className=\"far fa-undo\" />\n                        <i className=\"fas fa-undo\" />\n                    </button>\n                </div>\n            </li>\n        })\n    }\n\n\n    return (\n        <div className=\"card\">\n            <div className=\"card__header\">\n                <img src={require('./bg.png')} />\n            </div>\n            {/* <h2>hello!</h2> */}\n            <form className=\"card__body\" onSubmit={addTask}>\n                <div className=\"card__content\">\n                    <div className=\"card__title\">\n                        <h2>My Tasks</h2>\n                        <p>September 9,2020</p>\n                    </div>\n                    <div className=\"card__add\">\n                        <input id=\"newTask\" name=\"taskName\" type=\"text\" placeholder=\"Enter an activity...\" onChange={handleChange} />\n                        <button id=\"addItem\" type=\"submit\" onClick={addTask}>\n                            <i className=\"fa fa-plus\" />\n                        </button>\n                    </div>\n                    <div className=\"card__todo\">\n                        {/* Uncompleted tasks */}\n                        <ul className=\"todo\" id=\"todo\">\n                            {renderTaskToDo()}\n                        </ul>\n                        {/* Completed tasks */}\n                        <ul className=\"todo\" id=\"completed\">\n                            {renderTaskToDoDone()}\n                        </ul>\n                    </div>\n                </div>\n            </form>\n        </div>\n\n    )\n}\n","import React,{Fragment} from 'react';\nimport { Route } from 'react-router-dom';\nimport Header from '../../components/Home/Header/Header';\n\n\n\n\nexport const HomeTemplate = (props) => {\n\n    const {Component,...restParam} = props;\n    return <Route {...restParam} render={(propsRoute)=>{\n        return <>\n            <Header />\n            <Component {...propsRoute} />\n        </>\n    }} />\n\n}","import React,{useState,useEffect} from 'react';\nimport { Route } from 'react-router-dom';\nimport { Button,Layout } from 'antd';\n\nconst { Header, Footer, Sider, Content } = Layout;\n\n\n\n\n\n\n\nexport const UserLoginTemplate = (props) => {\n\n    const [{width,height},setSize] = useState({width:Math.round(window.innerWidth),height:Math.round(window.innerHeight)});\n\n    useEffect(()=>{\n        window.onresize = () => {\n            setSize({\n                width: Math.round(window.innerWidth),\n                height:Math.round(window.innerHeight)\n            })\n        }\n    },[])\n\n\n    let {Component,...restRoute} =  props;\n\n    return <Route {...restRoute} render={(propsRoute)=>{\n        return <>\n            <Layout>\n                <Sider width={width/2} style={{height:height,backgroundImage:`url(https://picsum.photos/${Math.round(width/2)}/${height})`,backgroundSize:'100%'}}>\n                  \n                </Sider>\n                <Content>\n                    <Component {...propsRoute} />\n                </Content>\n            </Layout>\n      \n        </>\n    }} />\n\n}","import React from 'react'\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { GET_TASK_DETAIL_SAGA, UPDATE_STATUS_TASK_SAGA } from '../../../redux/constants/Cyberbugs/TaskConstants';\n\nexport default function ContentMain(props) {\n\n    const { projectDetail } = props;\n    const dispatch = useDispatch();\n\n    const handleDragEnd = (result) => {\n        let { projectId, taskId } = JSON.parse(result.draggableId); // Lấy ra chuỗi sau mỗi lần draggable\n        let { source, destination } = result;\n        if (!result.destination) {\n            return;\n        }\n        if (source.index === destination.index && source.droppableId === destination.droppableId) {\n            return;\n        }\n\n        // Gọi api cập nhật lại status\n        dispatch({\n            type: UPDATE_STATUS_TASK_SAGA,\n            taskUpdateStatus: {\n                \"taskId\": taskId,\n                \"statusId\": destination.droppableId,\n                \"projectId\": projectId\n            }\n        })\n    }\n\n    const renderCardTaskList = () => {\n        return <DragDropContext onDragEnd={handleDragEnd}>\n            {\n                projectDetail.lstTask?.map((taskListDetail, index) => {\n                    return <Droppable key={index} droppableId={taskListDetail.statusId}>\n                        {(provided) => {\n                            return <div className=\"card pb-2\" style={{ width: '17rem', height: 'auto' }}>\n                                <div className=\"card-header\">\n                                    {taskListDetail.statusName}\n                                </div>\n                                <div\n                                    ref={provided.innerRef}\n                                    {...provided.droppableProps}\n                                    key={index}\n                                    className=\"list-group list-group-flush\" style={{ height: '100%' }}>\n                                    {taskListDetail.lstTaskDeTail?.map((task, index) => {\n                                        return <Draggable key={task.taskId.toString()} index={index} draggableId={JSON.stringify({ projectId: task.projectId, taskId: task.taskId })}>\n                                            {(provided) => {\n                                                return <div\n                                                    ref={provided.innerRef}\n                                                    {...provided.draggableProps}\n                                                    {...provided.dragHandleProps}\n                                                    key={index} className=\"list-group-item\" data-toggle=\"modal\" data-target=\"#infoModal\" onClick={() => {\n                                                        dispatch({ type: GET_TASK_DETAIL_SAGA, taskId: task.taskId })\n                                                    }}>\n                                                    <p className='font-weight-300'>\n                                                        {task.taskName}\n                                                    </p>\n                                                    <div className=\"block\" style={{ display: 'flex' }}>\n                                                        <div className=\"block-left\">\n                                                            <p className='text-danger'>{task.priorityTask.priority}</p>\n                                                        </div>\n                                                        <div className=\"block-right\">\n                                                            <div className=\"avatar-group\" style={{ display: 'flex' }}>\n                                                                {task.assigness?.map((mem, index) => {\n                                                                    return <div className=\"avatar\" key={index}>\n                                                                        <img src={mem.avatar} alt={mem.avatar} />\n                                                                    </div>\n                                                                })}\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            }}\n                                        </Draggable>\n                                    })}\n                                    {provided.placeholder}\n                                </div>\n                            </div>\n                        }}\n                    </Droppable>\n                })}\n        </DragDropContext>\n    }\n\n    return (\n        <div className=\"content\" style={{ display: 'flex' }}>\n            {renderCardTaskList()}\n        </div>\n    )\n}\n","export const GET_TASK_DETAIL_SAGA = 'GET_TASK_DETAIL_SAGA'\r\nexport const GET_TASK_DETAIL = 'GET_TASK_DETAIL'\r\n\r\nexport const CHANGE_TASK_MODAL = 'CHANGE_TASK_MODAL'\r\nexport const CHANGE_ASSIGNESS = 'CHANGE_ASSIGNESS'\r\nexport const REMOVE_USER_ASSIGN = 'REMOVE_USER_ASSIGN'\r\n\r\nexport const UPDATE_STATUS_TASK_SAGA = 'UPDATE_STATUS_TASK_SAGA'\r\n\r\nexport const UPDATE_TASK_SAGA = 'UPDATE_TASK_SAGA'\r\nexport const HANDLE_CHANGE_POST_API_SAGA = 'HANDLE_CHANGE_POST_API_SAGA'","import React from 'react'\n\nexport default function HeaderMain(props) {\n\n    const { projectDetail } = props;\n\n    return (\n        <div className=\"header\">\n            <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb\" style={{ backgroundColor: 'white' }}>\n                    <li className=\"breadcrumb-item\">Project</li>\n                    <li className=\"breadcrumb-item\">CyberLearn</li>\n                    <li className=\"breadcrumb-item\">Project management</li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                        {projectDetail.projectName}\n                    </li>\n                </ol>\n            </nav>\n        </div>\n    )\n}\n","import React from 'react'\nimport ReactHtmlParser from \"react-html-parser\"\n\nexport default function InfoMain(props) {\n\n    const { projectDetail } = props;\n\n    const renderAvatar = () => {\n        return projectDetail.members?.map((user, index) => {\n            return <div key={index} className='avatar'>\n                <img src={user.avatar} alt={user.avatar} />\n            </div>\n        })\n    }\n\n    return (\n        <>\n            <h3>{projectDetail.projectName}</h3>\n\n            <section>\n                {ReactHtmlParser(projectDetail.description)}\n            </section>\n\n            <div className=\"info\" style={{ display: 'flex' }}>\n                <div className=\"search-block\">\n                    <input className=\"search\" />\n                    <i className=\"fa fa-search\" />\n                </div>\n                <div className=\"avatar-group\" style={{ display: 'flex' }}>\n                    {renderAvatar()}\n                </div>\n                <div style={{ marginLeft: 20 }} className=\"text\">Only My Issues</div>\n                <div style={{ marginLeft: 20 }} className=\"text\">Recently Updated</div>\n            </div>\n        </>\n\n    )\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nexport default function MenuCyberbugs() {\n    return (\n        <div className=\"menu\">\n            <div className=\"account\">\n                <div className=\"avatar\">\n                    <img src={require(\"../../assets/img/download.jfif\")} alt=\"123\" />\n                </div>\n                <div className=\"account-info\">\n                    <p>CyberLearn.vn</p>\n                    <p>Report bugs</p>\n                </div>\n            </div>\n            <div className=\"control\">\n                <div>\n                    <i className=\"fa fa-credit-card mr-1\" />\n                    <NavLink className=\"text-dark\" activeStyle={{color:'blue'}} to=\"/cyberbugs\" activeClassName=\"active font-weight-bold text-primary\" >Cyber Board</NavLink>\n                </div>\n                <div>\n                    <i className=\"fa fa-cog mr-1\" /> \n                    <NavLink className=\"text-dark\"  activeStyle={{color:'blue'}} to='/projectmanagement' activeClassName=\"active font-weight-bold  text-primary\" >Project management</NavLink>\n                </div>\n                <div>\n                    <i className=\"fa fa-cog mr-1\" /> \n                    <NavLink className=\"text-dark\"  activeStyle={{color:'blue'}} to='/createproject' activeClassName=\"active font-weight-bold  text-primary\" >Create project</NavLink>\n                </div>\n               \n            </div>\n            <div className=\"feature\">\n                <div>\n                    <i className=\"fa fa-truck mr-1\" />\n                    <span>Releases</span>\n                </div>\n                <div>\n                    <i className=\"fa fa-equals mr-1\" />\n                    <span>Issues and filters</span>\n                </div>\n                <div>\n                    <i className=\"fa fa-paste mr-1\" />\n                    <span>Pages</span>\n                </div>\n                <div>\n                    <i className=\"fa fa-location-arrow mr-1\" />\n                    <span>Reports</span>\n                </div>\n                <div>\n                    <i className=\"fa fa-box\" />\n                    <span>Components</span>\n                </div>\n            </div>\n        </div>\n\n\n    )\n}\n","export const GET_ALL_STATUS_SAGA = 'GET_ALL_STATUS_SAGA'\r\nexport const GET_ALL_STATUS = 'GET_ALL_STATUS'","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactHtmlParser from 'react-html-parser'\nimport { GET_ALL_STATUS_SAGA } from \"../../../redux/constants/Cyberbugs/StatusConstant\";\nimport { GET_ALL_PRIORITY_SAGA } from '../../../redux/constants/Cyberbugs/PriorityConstants';\nimport { CHANGE_ASSIGNESS, CHANGE_TASK_MODAL, HANDLE_CHANGE_POST_API_SAGA, REMOVE_USER_ASSIGN, UPDATE_STATUS_TASK_SAGA } from '../../../redux/constants/Cyberbugs/TaskConstants';\nimport { GET_ALL_TASK_TYPE_SAGA } from '../../../redux/constants/Cyberbugs/TaskTypeConstants';\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\nexport default function ModalCyberBugs(props) {\n\n    const { taskDetailModal } = useSelector(state => state.TaskReducer);\n    const { arrStatus } = useSelector(state => state.StatusReducer);\n    const { arrPriority } = useSelector(state => state.PriorityReducer);\n    const { arrTaskType } = useSelector(state => state.TaskTypeReducer);\n    const { projectDetail } = useSelector(state => state.ProjectReducer)\n\n    const [visibleEditor, setVisibleEditor] = useState(false);\n    const [historyContent, setHistoryContent] = useState(taskDetailModal.description);\n    const [content, setContent] = useState(taskDetailModal.description);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch({ type: GET_ALL_STATUS_SAGA })\n        dispatch({ type: GET_ALL_PRIORITY_SAGA })\n        dispatch({ type: GET_ALL_TASK_TYPE_SAGA })\n    }, [])\n\n    const renderDescription = () => {\n        const jsxDescription = ReactHtmlParser(taskDetailModal.description);\n        return <div>\n            {visibleEditor ? <div><Editor\n                name=\"description\"\n                initialValue={taskDetailModal.description}\n                init={{\n                    selector: \"textarea#myTextArea\",\n                    height: 500,\n                    menubar: false,\n                    plugins: [\n                        \"advlist autolink lists link image charmap print preview anchor\",\n                        \"searchreplace visualblocks code fullscreen\",\n                        \"insertdatetime media table paste code help wordcount\",\n                    ],\n                    toolbar:\n                        \"undo redo | formatselect | bold italic backcolor | \\\n                                alignleft aligncenter alignright alignjustify | \\\n                                bullist numlist outdent indent | removeformat | help\",\n                }}\n                onEditorChange={(content, editor) => {\n                    setContent(content);\n                }}\n            />\n                <button className=\"btn btn-primary m-2\" onClick={() => {\n                    dispatch({\n                        type: HANDLE_CHANGE_POST_API_SAGA,\n                        actionType: CHANGE_TASK_MODAL,\n                        name: 'description',\n                        value: content\n                    })\n\n                    // dispatch({\n                    //     type: CHANGE_TASK_MODAL,\n                    //     name: 'description',\n                    //     value: content\n                    // })\n                    setVisibleEditor(false);\n                }}>Save</button>\n                <button className=\"btn btn-primary m-2\" onClick={() => {\n\n                    dispatch({\n                        type: HANDLE_CHANGE_POST_API_SAGA,\n                        actionType: CHANGE_TASK_MODAL,\n                        name: 'description',\n                        value: historyContent\n                    })\n\n                    // dispatch({\n                    //     type: CHANGE_TASK_MODAL,\n                    //     name: 'description',\n                    //     value: historyContent\n                    // })\n                    setVisibleEditor(false)\n                }}>Close</button>\n            </div> : <div onClick={() => {\n                setHistoryContent(taskDetailModal.description);\n                setVisibleEditor(!visibleEditor);\n            }}>{jsxDescription}</div>}\n        </div>\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n\n        dispatch({\n            type: HANDLE_CHANGE_POST_API_SAGA,\n            actionType: CHANGE_TASK_MODAL,\n            name,\n            value\n        })\n\n        // dispatch({\n        //     type: CHANGE_TASK_MODAL,\n        //     name,\n        //     value\n        // })\n    }\n\n    const renderTimeTracking = () => {\n\n        const { timeTrackingSpent, timeTrackingRemaining } = taskDetailModal;\n        const max = Number(timeTrackingSpent) + Number(timeTrackingRemaining)\n        const percent = Math.round(Number(timeTrackingSpent) / max * 100)\n\n        return <div>\n            <div style={{ display: 'flex' }}>\n                <i className=\"fa fa-clock\" />\n                <div style={{ width: '100%' }}>\n                    <div className=\"progress\">\n                        <div className=\"progress-bar\" role=\"progressbar\" style={{ width: `${percent}%` }} aria-valuenow={Number(timeTrackingSpent)} aria-valuemin={Number(timeTrackingRemaining)} aria-valuemax={max} />\n                    </div>\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <p className=\"logged\">{Number(timeTrackingSpent)}h spent</p>\n                        <p className=\"estimate-time\">{Number(timeTrackingRemaining)}h remaining</p>\n                    </div>\n                </div>\n            </div>\n\n            <div className='row'>\n                <div className=\"col-6\">\n                    <input className='form-control' name='timeTrackingSpent' onChange={handleChange} />\n                </div>\n                <div className='col-6'>\n                    <input className='form-control' name='timeTrackingRemaining' onChange={handleChange} />\n                </div>\n            </div>\n        </div>\n    }\n\n    return (\n        <div className=\"modal fade\" id=\"infoModal\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"infoModal\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-info\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <div className=\"task-title\">\n                            <i className=\"fa fa-bookmark\" />\n                            <select name='typeId' value={taskDetailModal.typeId} onChange={handleChange}>\n                                {arrTaskType.map((tp, index) => {\n                                    return <option value={tp.id}>{tp.taskType}</option>\n                                })}\n                            </select>\n\n                            <span>{taskDetailModal.taskName}</span>\n                        </div>\n                        <div style={{ display: 'flex' }} className=\"task-click\">\n                            <div>\n                                <i className=\"fab fa-telegram-plane\" />\n                                <span style={{ paddingRight: 20 }}>Give feedback</span>\n                            </div>\n                            <div>\n                                <i className=\"fa fa-link\" />\n                                <span style={{ paddingRight: 20 }}>Copy link</span>\n                            </div>\n                            <i className=\"fa fa-trash-alt='xyz'\" style={{ cursor: 'pointer' }} />\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">×</span>\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"modal-body\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-8\">\n                                    <p className=\"issue\">This is an issue of type: Task.</p>\n                                    <div className=\"description\">\n                                        <p>Description</p>\n                                        {renderDescription()}\n                                    </div>\n\n                                    <div className=\"comment\">\n                                        <h6>Comment</h6>\n                                        <div className=\"block-comment\" style={{ display: 'flex' }}>\n                                            <div className=\"avatar\">\n                                                <img src={require(\"../../../assets/img/download (1).jfif\")} alt='xyz' />\n                                            </div>\n                                            <div className=\"input-comment\">\n                                                <input type=\"text\" placeholder=\"Add a comment ...\" />\n                                                <p>\n                                                    <span style={{ fontWeight: 500, color: 'gray' }}>Protip:</span>\n                                                    <span>press\n                                                        <span style={{ fontWeight: 'bold', background: '#ecedf0', color: '#b4bac6' }}>M</span>\n                                                        to comment</span>\n                                                </p>\n                                            </div>\n                                        </div>\n                                        <div className=\"lastest-comment\">\n                                            <div className=\"comment-item\">\n                                                <div className=\"display-comment\" style={{ display: 'flex' }}>\n                                                    <div className=\"avatar\">\n                                                        <img src={require(\"../../../assets/img/download (1).jfif\")} alt='xyz' />\n                                                    </div>\n                                                    <div>\n                                                        <p style={{ marginBottom: 5 }}>\n                                                            Lord Gaben <span>a month ago</span>\n                                                        </p>\n                                                        <p style={{ marginBottom: 5 }}>\n                                                            Lorem ipsum dolor sit amet, consectetur\n                                                            adipisicing elit. Repellendus tempora ex\n                                                            voluptatum saepe ab officiis alias totam ad\n                                                            accusamus molestiae?\n                                                        </p>\n                                                        <div>\n                                                            <span style={{ color: '#929398' }}>Edit</span>\n                                                            •\n                                                            <span style={{ color: '#929398' }}>Delete</span>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-4\">\n                                    <div className=\"status\">\n                                        <h6>STATUS</h6>\n                                        <select name=\"statusId\" className=\"custom-select\" value={taskDetailModal.statusId} onChange={(e) => {\n\n                                            // CÁCH 1: GỌI API CHO 1 THUỘC TÍNH\n                                            // const action = {\n                                            //     type: UPDATE_STATUS_TASK_SAGA,\n                                            //     taskUpdateStatus: {\n                                            //         taskId: taskDetailModal.taskId,\n                                            //         statusId: e.target.value,\n                                            //         projectId: taskDetailModal.projectId\n                                            //     }\n                                            // }\n                                            // dispatch(action)\n\n                                            // CÁCH 2: GỌI API THAY ĐỔI TẤT CẢ THUỘC TÍNH CHO DÙ BẠN CHỈ THAY ĐỔI 1 THUỘC TÍNH\n                                            handleChange(e);\n                                        }}>\n                                            {arrStatus.map((status, index) => {\n                                                return <option value={status.statusId} key={index}>\n                                                    {status.statusName}\n                                                </option>\n                                            })}\n                                        </select>\n                                    </div>\n                                    <div className=\"assignees\">\n                                        <h6>ASSIGNEES</h6>\n                                        <div className='row'>\n                                            {\n                                                taskDetailModal.assigness?.map((user, index) => {\n                                                    return <div className='col-6 mt-2 mb-2'>\n                                                        <div key={index} style={{ display: 'flex' }} className=\"item\">\n                                                            <div className=\"avatar\">\n                                                                <img src={user.avatar} alt={user.avatar} />\n                                                            </div>\n                                                            <p className=\"name mt-1 ml-1\">\n                                                                {user.name}\n                                                                {/* Nút xóa */}\n                                                                <i className=\"fa fa-times\" style={{ marginLeft: 5, cursor: 'pointer' }} onClick={() => {\n\n                                                                    dispatch({\n                                                                        type: HANDLE_CHANGE_POST_API_SAGA,\n                                                                        actionType: REMOVE_USER_ASSIGN,\n                                                                        userId: user.id\n                                                                    })\n\n                                                                    // dispatch({\n                                                                    //     type: REMOVE_USER_ASSIGN,\n                                                                    //     userId: user.id\n                                                                    // })\n                                                                }} />\n                                                            </p>\n                                                        </div>\n                                                    </div>\n                                                })\n                                            }\n\n                                            <div className='col-6 mt-2 mb-2'>\n                                                <Select\n                                                    options={projectDetail.members?.filter(mem => {\n                                                        let index = taskDetailModal.assigness?.findIndex(us => us.id === mem.userId);\n                                                        if (index !== -1) {\n                                                            return false;\n                                                        }\n                                                        return true; // thì sẽ đc hiển thị vô list\n                                                    }).map((mem, index) => {\n                                                        return { value: mem.userId, label: mem.name }\n                                                    })}\n                                                    optionFilterProp=\"label\"\n                                                    style={{ width: '100%' }}\n                                                    name='lstUser'\n                                                    value=\"+ Add more\"\n                                                    className='form-control'\n                                                    onSelect={(value) => {\n                                                        if (value == '0') {\n                                                            return;\n                                                        }\n                                                        let userSelected = projectDetail.members?.find(mem => mem.userId == value);\n                                                        userSelected = { ...userSelected, id: userSelected.userId };\n\n                                                        dispatch({\n                                                            type: HANDLE_CHANGE_POST_API_SAGA,\n                                                            actionType: CHANGE_ASSIGNESS,\n                                                            userSelected\n                                                        })\n\n                                                        // dispatch({\n                                                        //     type: CHANGE_ASSIGNESS,\n                                                        //     userSelected\n                                                        // })\n                                                    }}>\n                                                </Select>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    {/* <div className=\"reporter\">\n                                        <h6>REPORTER</h6>\n                                        <div style={{ display: 'flex' }} className=\"item\">\n                                            <div className=\"avatar\">\n                                                <img src={require(\"../../../assets/img/download (1).jfif\")} alt='xyz' />\n                                            </div>\n                                            <p className=\"name\">\n                                                Pickle Rick\n                                                <i className=\"fa fa-times\" style={{ marginLeft: 5 }} />\n                                            </p>\n                                        </div>\n                                    </div> */}\n                                    <div className=\"priority\" style={{ marginBottom: 20 }}>\n                                        <h6>PRIORITY</h6>\n                                        <select name='priorityId' className='form-control' value={taskDetailModal.priorityId} onChange={(e) => {\n                                            handleChange(e);\n                                        }}>\n                                            {arrPriority.map((item, index) => {\n                                                return <option key={index} value={item.priorityId}>{item.priority}</option>\n                                            })}\n                                        </select>\n                                    </div>\n                                    <div className=\"estimate\">\n                                        <h6>ORIGINAL ESTIMATE (HOURS)</h6>\n                                        <input name='originalEstimate' type=\"text\" className=\"estimate-hours\" value={taskDetailModal.originalEstimate} onChange={(e) => {\n                                            handleChange(e)\n                                        }} />\n                                    </div>\n                                    <div className=\"time-tracking\">\n                                        <h6>TIME TRACKING</h6>\n                                        {\n                                            renderTimeTracking()\n                                        }\n\n                                    </div>\n                                    <div style={{ color: '#929398' }}>Create at a month ago</div>\n                                    <div style={{ color: '#929398' }}>Update at a few seconds ago</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","export const GET_ALL_PRIORITY = 'GET_ALL_PRIORITY'\r\nexport const GET_ALL_PRIORITY_SAGA = 'GET_ALL_PRIORITY_SAGA'","export const GET_ALL_TASK_TYPE = 'GET_ALL_TASK_TYPE'\r\nexport const GET_ALL_TASK_TYPE_SAGA = 'GET_ALL_TASK_TYPE_SAGA'","import { Editor } from \"@tinymce/tinymce-react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Select, Radio, Slider } from \"antd\";\r\nimport { useSelector, useDispatch, connect } from 'react-redux'\r\nimport { GET_ALL_PROJECT_SAGA } from \"../../../redux/constants/Cyberbugs/ProjectCyberBugsConstants\";\r\nimport { GET_ALL_TASK_TYPE_SAGA } from \"../../../redux/constants/Cyberbugs/TaskTypeConstants\";\r\nimport { GET_ALL_PRIORITY_SAGA } from \"../../../redux/constants/Cyberbugs/PriorityConstants\";\r\nimport * as Yup from 'yup';\r\nimport { withFormik } from \"formik\";\r\nimport { GET_ALL_STATUS_SAGA } from \"../../../redux/constants/Cyberbugs/StatusConstant\";\r\nimport { GET_USER_BY_PROJECT_ID_SAGA } from \"../../../redux/constants/Cyberbugs/UserConstants\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst children = [];\r\n\r\nfor (let i = 10; i < 36; i++) {\r\n    children.push(<Option key={i.toString(36) + i} > {i.toString(36) + i}</Option>)\r\n}\r\n\r\nfunction FormCreateTask(props) {\r\n\r\n    // Lấy dữ liệu từ Redux\r\n    const { arrProject } = useSelector(state => state.ProjectCyberBugsReducer);\r\n    const { arrTaskType } = useSelector(state => state.TaskTypeReducer);\r\n    const { arrPriority } = useSelector(state => state.PriorityReducer);\r\n    const { arrUser } = useSelector(state => state.UserLoginCyberBugsReducer);\r\n    const { arrStatus } = useSelector(state => state.StatusReducer);\r\n    // Hàm biến đổi option cho thẻ select\r\n    const userOptions = arrUser.map((item, index) => {\r\n        return { value: item.userId, label: item.name }\r\n    })\r\n\r\n    // Do kết nối với withFormik => component có các props\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        setValues,\r\n        setFieldValue\r\n    } = props;\r\n\r\n    // Dispatch để dữ liệu được cập nhật\r\n    const dispatch = useDispatch();\r\n\r\n    const [size, setSize] = React.useState('default');\r\n\r\n    const [timeTracking, setTimetracking] = useState({\r\n        timeTrackingSpent: 0,\r\n        timeTrackingRemaining: 0\r\n    })\r\n\r\n    // Hook gọi services để dữ liệu đc cập nhật\r\n    useEffect(() => {\r\n        dispatch({ type: GET_ALL_PROJECT_SAGA })\r\n        dispatch({ type: GET_ALL_TASK_TYPE_SAGA })\r\n        dispatch({ type: GET_ALL_PRIORITY_SAGA })\r\n        dispatch({ type: GET_ALL_STATUS_SAGA })\r\n        // Đưa hàm handle submit lên drawer reducer để cập nhật lại sự kiện cho nút submit\r\n        dispatch({ type: 'SET_SUBMIT_CREATE_TASK', submitFunction: handleSubmit })\r\n        // Load data search ra hết lun để gõ thì data có sẵn cho mượt mà\r\n        dispatch({ type: 'GET_USER_API', keyWord: '' })\r\n    }, [])\r\n\r\n    const children = [];\r\n\r\n    return (\r\n        <form className=\"container\" onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <p>Project</p>\r\n                <select name=\"projectId\" className=\"form-control\" onChange={(e) => {\r\n                    // diaptch giá trị làm thay đổi arrUser\r\n                    let { value } = e.target;\r\n                    dispatch({\r\n                        type: GET_USER_BY_PROJECT_ID_SAGA,\r\n                        idProject: value\r\n                    })\r\n                    // Cập nhật giá trị cho projectId\r\n                    setFieldValue('projectId', e.target.value);\r\n                }}>\r\n                    {arrProject.map((project, index) => {\r\n                        return <option key={index} value={project.id}>{project.projectName}</option>\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <p>Task name</p>\r\n                <input name=\"taskName\" className=\"form-control\" onChange={handleChange} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <p>Status</p>\r\n                <select name=\"statusId\" className=\"form-control\" onChange={handleChange}>\r\n                    {arrStatus.map((statusItem, index) => {\r\n                        return <option key={index} value={statusItem.statusId}>{statusItem.statusName}</option>\r\n                    })}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <p>Priority</p>\r\n                        <select name=\"priorityId\" className=\"form-control\" onChange={handleChange}>\r\n                            {arrPriority?.map((priority, index) => {\r\n                                return <option key={index} value={priority.priorityId}>{priority.priority}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <p>Task type</p>\r\n                        <select className=\"form-control\" name=\"typeId\" onChange={handleChange}>\r\n                            {arrTaskType?.map((taskType, index) => {\r\n                                return <option key={index} value={taskType.id}>{taskType.taskType}</option>\r\n                            })}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-6\">\r\n                        <p>Assignees</p>\r\n                        <Select\r\n                            mode=\"multiple\"\r\n                            size={size}\r\n                            options={userOptions}\r\n                            placeholder=\"Please select\"\r\n                            optionFilterProp=\"label\" // Search nhận value là label\r\n                            onChange={(values) => {\r\n                                // Set lại giá trị cho lstUserAsign\r\n                                setFieldValue('listUserAsign', values);\r\n                            }}\r\n                            onSelect={(value) => {\r\n                                console.log(value);\r\n                            }}\r\n                            style={{ width: '100%' }}\r\n                        >\r\n                            {children}\r\n                        </Select>\r\n\r\n                        <div className=\"row mt-3\">\r\n                            <div className=\"col-12\">\r\n                                <p>original Estimate</p>\r\n                                <input type=\"number\" min=\"0\" name=\"originalEstime\" defaultValue=\"0\" className=\"form-control\" height=\"30\" onChange={handleChange} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <p>Time tracking</p>\r\n                        <Slider defaultValue={30} value={timeTracking.timeTrackingSpent} max={Number(timeTracking.timeTrackingSpent) + Number(timeTracking.timeTrackingRemaining)} />\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 text-left font-weight-bold\">{timeTracking.timeTrackingSpent}h logged</div>\r\n                            <div className=\"col-6 text-right font-weight-bold\">{timeTracking.timeTrackingRemaining}h logged</div>\r\n                        </div>\r\n                        <div className=\"row\" style={{ marginTop: 5 }}>\r\n                            <div className=\"col-6\">\r\n                                <p>Time spent</p>\r\n                                <input type=\"number\" defaultValue=\"0\" min=\"0\" className=\"form-control\" name=\"timeTrackingSpent\" onChange={(e) => {\r\n                                    setTimetracking({\r\n                                        ...timeTracking,\r\n                                        timeTrackingSpent: e.target.value\r\n                                    });\r\n                                    setFieldValue('timeTrackingSpent', e.target.value)\r\n                                }} />\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <p>Time remanining</p>\r\n                                <input type=\"number\" defaultValue=\"0\" min=\"0\" className=\"form-control\" name=\"timeTrackingRemaining\" onChange={(e) => {\r\n                                    setTimetracking({\r\n                                        ...timeTracking,\r\n                                        timeTrackingRemaining: e.target.value\r\n                                    })\r\n                                    setFieldValue('timeTrackingRemaining', e.target.value)\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <p>Description</p>\r\n                <Editor\r\n                    name=\"description\"\r\n                    init={{\r\n                        selector: \"textarea#myTextArea\",\r\n                        height: 500,\r\n                        menubar: false,\r\n                        plugins: [\r\n                            \"advlist autolink lists link image charmap print preview anchor\",\r\n                            \"searchreplace visualblocks code fullscreen\",\r\n                            \"insertdatetime media table paste code help wordcount\",\r\n                        ],\r\n                        toolbar:\r\n                            \"undo redo | formatselect | bold italic backcolor | \\\r\n                                alignleft aligncenter alignright alignjustify | \\\r\n                                bullist numlist outdent indent | removeformat | help\",\r\n                    }}\r\n                    onEditorChange={(content, editor) => {\r\n                        setFieldValue('description', content)\r\n                    }}\r\n                />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst frmCreateTask = withFormik({\r\n    enableReinitialize: true,\r\n    mapPropsToValues: (props) => {\r\n        const { arrProject, arrTaskType, arrPriority, arrStatus } = props;\r\n        // Nếu danh sách project > 0 => load userAssign cho project đầu tiên\r\n        // if (arrProject.length > 0) {\r\n        //     props.dispatch({ type: GET_USER_BY_PROJECT_ID_SAGA, idProject: arrProject[0]?.id });\r\n        // }\r\n\r\n        return {\r\n            taskName: '',\r\n            description: '',\r\n            statusId: arrStatus[0]?.statusId,\r\n            originalEstimate: 0,\r\n            timeTrackingSpent: 0,\r\n            timeTrackingRemaining: 0,\r\n            projectId: arrProject[0]?.id,\r\n            typeId: arrTaskType[0]?.id,\r\n            priorityId: arrPriority[0]?.priorityId,\r\n            listUserAsign: []\r\n        }\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n\r\n    }),\r\n    handleSubmit: (values, { props, setSubmitting }) => {\r\n        props.dispatch({ type: 'CREATE_TASK_SAGA', taskObject: values })\r\n        console.log('taskobject', values);\r\n    },\r\n    displayName: 'createTaskForm',\r\n})(FormCreateTask);\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        arrProject: state.ProjectCyberBugsReducer.arrProject,\r\n        arrTaskType: state.TaskTypeReducer.arrTaskType,\r\n        arrPriority: state.PriorityReducer.arrPriority,\r\n        arrStatus: state.StatusReducer.arrStatus\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(frmCreateTask);","export const GET_ALL_PROJECT = 'GET_ALL_PROJECT'\r\nexport const GET_ALL_PROJECT_SAGA = 'GET_ALL_PROJECT_SAGA'\r\n","export const GET_USER_BY_PROJECT_ID_SAGA = 'GET_USER_BY_PROJECT_ID_SAGA'\r\nexport const GET_USER_BY_PROJECT_ID = 'GET_USER_BY_PROJECT_ID'","import React, { useState } from 'react'\nimport { Layout, Menu } from 'antd';\nimport {\n    MenuUnfoldOutlined,\n    MenuFoldOutlined,\n    UserOutlined,\n    VideoCameraOutlined,\n    UploadOutlined,\n    BarsOutlined,\n    SearchOutlined,\n    PlusOutlined\n} from '@ant-design/icons';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormCreateTask from '../Forms/FormCreateTask/FormCreateTask';\n\nconst { Header, Sider, Content } = Layout;\nexport default function SidebarCyberbugs() {\n\n    const dispatch = useDispatch();\n\n    const [state, setState] = useState({\n        collapsed: false,\n    })\n    const toggle = () => {\n        setState({\n            collapsed: !state.collapsed,\n        });\n    };\n    return (\n        <div>\n\n            <Sider trigger={null} collapsible collapsed={state.collapsed} style={{ height: '100%' }}>\n                <div className=\"text-right pr-2\" onClick={toggle} ><BarsOutlined style={{ cursor: 'pointer', color: '#fff', fontSize: 25 }} /></div>\n\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                    <Menu.Item key=\"1\" icon={<PlusOutlined style={{ fontSize: 20 }} />} onClick={() => {\n                        dispatch({\n                            type: 'OPEN_FORM_CREATE_TASK',\n                            Component:<FormCreateTask />,\n                            title: 'Create task'\n                        })\n                    }} >\n                        <span className=\"mb-2\">Create task</span>\n                    </Menu.Item>\n                    <Menu.Item key=\"2\" icon={<SearchOutlined style={{ fontSize: 20 }} />}>\n                        Search\n                    </Menu.Item>\n\n                </Menu>\n            </Sider>\n        </div>\n\n\n    )\n}\n","import React, { Fragment } from 'react';\nimport { Route } from 'react-router-dom';\nimport ContentMain from '../../components/Cyberbugs/Main/ContentMain';\nimport HeaderMain from '../../components/Cyberbugs/Main/HeaderMain';\nimport InfoMain from '../../components/Cyberbugs/Main/InfoMain';\nimport MenuCyberbugs from '../../components/Cyberbugs/MenuCyberbugs';\nimport ModalCyberBugs from '../../components/Cyberbugs/ModalCyberBugs.js/ModalCyberBugs';\nimport SidebarCyberbugs from '../../components/Cyberbugs/SidebarCyberbugs';\nimport Header from '../../components/Home/Header/Header';\n\nimport '../../index.css';\n\n\n\nexport const CyberbugsTemplate = (props) => {\n\n    const { Component, ...restParam } = props;\n    return <Route {...restParam} render={(propsRoute) => {\n        return <>\n            <div className=\"jira\">\n                <SidebarCyberbugs />\n                <MenuCyberbugs />\n                    <Component {...propsRoute} />\n                <ModalCyberBugs />\n            </div>\n        </>\n    }} />\n\n}","import React, { useEffect } from 'react'\nimport ContentMain from '../../../components/Cyberbugs/Main/ContentMain'\nimport HeaderMain from '../../../components/Cyberbugs/Main/HeaderMain'\nimport InfoMain from '../../../components/Cyberbugs/Main/InfoMain'\nimport { useSelector, useDispatch } from 'react-redux'\n\nexport default function IndexCyberBugs(props) {\n\n    // Lấy dữ liệu về\n    const { projectDetail } = useSelector(state => state.ProjectReducer)\n\n    const dispatch = useDispatch();\n\n    console.log('projectDetail', projectDetail)\n\n    useEffect(() => {\n        // Khi người dùng link qua trang này bằng thẻ navlink hoặc người dùng tự gõ url thì ta sẽ lấy tham số từ url => gọi saga\n        const { projectId } = props.match.params;\n        dispatch({\n            type: 'GET_PROJECT_DETAIL',\n            projectId\n        })\n    }, [])\n\n    return (\n        <div className=\"main\">\n            <HeaderMain projectDetail={projectDetail} />\n\n            <InfoMain projectDetail={projectDetail} />\n\n            <ContentMain projectDetail={projectDetail} />\n        </div>\n\n    )\n}\n","import React, { useEffect } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup'\nimport { connect, useSelector, useDispatch } from 'react-redux'\n\nfunction CreateProject(props) {\n\n    const arrProjectCategory = useSelector(state => state.ProjectCategoryReducer.arrProjectCategory);\n    const dispatch = useDispatch();\n\n    const {\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        setValues,\n        setFieldValue\n    } = props;\n\n    useEffect(() => {\n        //Gọi api để lấy dữ liệu thẻ select\n        dispatch({ type: 'GET_ALL_PROJECT_CATEGORY_SAGA' })\n    }, []);\n    const handleEditorChange = (content, editor) => {\n        setFieldValue('description', content)\n    }\n\n\n    return (\n        <div className=\"container m-5\">\n            <h3>CreateProject</h3>\n            <form className=\"container\" onSubmit={handleSubmit} onChange={handleChange}>\n                <div className=\"form-group\">\n                    <p>Name</p>\n                    <input className=\"form-control\" name=\"projectName\" />\n                </div>\n                <div className=\"form-group\">\n                    <p>Description</p>\n                    <Editor\n\n                        name=\"description\"\n\n                        init={{\n                            selector: 'textarea#myTextArea',\n\n                            height: 500,\n                            menubar: false,\n                            plugins: [\n                                'advlist autolink lists link image charmap print preview anchor',\n                                'searchreplace visualblocks code fullscreen',\n                                'insertdatetime media table paste code help wordcount'\n                            ],\n                            toolbar:\n                                'undo redo | formatselect | bold italic backcolor | \\\n                                alignleft aligncenter alignright alignjustify | \\\n                                bullist numlist outdent indent | removeformat | help'\n                        }}\n                        onEditorChange={handleEditorChange}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <select name=\"categoryId\" className=\"form-control\" onChange={handleChange}>\n                        {arrProjectCategory.map((item, index) => {\n                            return <option value={item.id} key={index}>{item.projectCategoryName}</option>\n                        })}\n                    </select>\n                </div>\n                <button className=\"btn btn-outline-primary\" type=\"submit\">Create project</button>\n            </form>\n        </div>\n    )\n}\n\n\n\n\nconst createProjectForm = withFormik({\n    enableReinitialize: true,\n    mapPropsToValues: (props) => {\n        console.log('propvalue', props)\n        return {\n            projectName: '',\n            description: '',\n            categoryId: props.arrProjectCategory[0]?.id\n        }\n    },\n    validationSchema: Yup.object().shape({\n\n\n    }),\n    handleSubmit: (values, { props, setSubmitting }) => {\n\n        props.dispatch({ \n            type: 'CREATE_PROJECT_SAGA',\n            newProject: values \n        })\n\n\n    },\n    displayName: 'CreateProjectFormik',\n})(CreateProject);\n\nconst mapStateToProps = (state) => ({\n\n    arrProjectCategory: state.ProjectCategoryReducer.arrProjectCategory\n\n})\n\n\nexport default connect(mapStateToProps)(createProjectForm);","import { Editor } from '@tinymce/tinymce-react'\nimport { withFormik } from 'formik';\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { connect } from 'react-redux';\nimport * as Yup from 'yup';\n\n\nfunction FormEditProject(props) {\n    const arrProjectCategory = useSelector(state => state.ProjectCategoryReducer.arrProjectCategory);\n    const dispatch = useDispatch();\n\n\n    const {\n        values,\n        touched,\n        errors,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        setValues,\n        setFieldValue\n    } = props;\n\n    // const submitForm = (e) => {\n    //     e.preventDefault();\n    //     alert('submit edit');\n    // }\n\n    //componentdidmount\n    useEffect(() => {\n\n        //Gọi api load project category \n        dispatch({ type: 'GET_ALL_PROJECT_CATEGORY_SAGA' })\n\n\n        //Load sự kiện submit lên drawer nút submit\n        dispatch({ type: 'SET_SUBMIT_EDIT_PROJECT', submitFunction: handleSubmit });\n        \n\n\n\n    }, [])\n\n\n    const handleEditorChange = (content, editor) => {\n        setFieldValue('description', content)\n    }\n\n    return (\n        <form className=\"container-fuild\" onSubmit={handleSubmit}>\n            <div className=\"row\">\n                <div className=\"col-4\">\n\n                    <div className=\"form-group\">\n                        <p className=\"font-weight-bold\">Project id</p>\n                        <input value={values.id} disabled className=\"form-control\" name=\"id\" />\n                    </div>\n\n\n                </div>\n                <div className=\"col-4\">\n                    <div className=\"form-group\">\n                        <p className=\"font-weight-bold\">Project name</p>\n                        <input value={values.projectName} className=\"form-control\" name=\"projectName\" onChange={handleChange} />\n                    </div>\n                </div>\n                <div className=\"col-4\">\n                    <div className=\"form-group\">\n                        <p className=\"font-weight-bold\">Project Category</p>\n                        <select className=\"form-control\" name=\"categoryId\" value={values.categoryId}>\n                            {arrProjectCategory?.map((item, index) => {\n                                return <option key={index} value={item.id}>\n                                    {item.projectCategoryName}\n                                </option>\n                            })}\n                        </select>\n\n\n                    </div>\n                </div>\n                <div className=\"col-12\">\n                    <div className=\"form-group\">\n                        <p className=\"font-weight-bold\">Description</p>\n                        <Editor\n\n                            name=\"description123\"\n                            initialValue={values.description}\n                            value = {values.description}\n                            init={{\n                                selector: 'textarea#myTextArea',\n                                height: 500,\n                            \n                                menubar: false,\n                                plugins: [\n                                    'advlist autolink lists link image charmap print preview anchor',\n                                    'searchreplace visualblocks code fullscreen',\n                                    'insertdatetime media table paste code help wordcount'\n                                ],\n                                toolbar:\n                                    'undo redo | formatselect | bold italic backcolor | \\\n        alignleft aligncenter alignright alignjustify | \\\n        bullist numlist outdent indent | removeformat | help'\n                            }}\n                            onEditorChange={handleEditorChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        </form >\n    )\n}\n\nconst EditProjectForm = withFormik({\n    enableReinitialize: true,\n    mapPropsToValues: (props) => {\n        const { projectEdit } = props;\n\n        return {\n            id: projectEdit?.id,\n            projectName: projectEdit.projectName,\n            description: projectEdit.description,\n            categoryId: projectEdit.categoryId\n        }\n    },\n    validationSchema: Yup.object().shape({\n\n\n    }),\n    handleSubmit: (values, { props, setSubmitting }) => {\n\n        //Khi người dùng bấm submit => đưa dữ liệu về backedn thông qua api\n        // const action = {\n        //     type:'UPDATE_PROJECT_SAGA',\n        //     prjectUpdate:values\n        // }\n        //Gọi saga\n        props.dispatch({\n            type:'UPDATE_PROJECT_SAGA',\n            prjectUpdate:values\n        })\n\n    },\n    displayName: 'EditProjectForm',\n})(FormEditProject);\n\nconst mapStateToProps = (state) => ({\n\n    projectEdit: state.ProjectReducer.projectEdit\n\n})\n\n\n\nexport default connect(mapStateToProps)(EditProjectForm);","import React, { useState, useEffect, useRef } from 'react'\nimport { Table, Tag, Space, Button, Avatar, Popconfirm, message, Popover, AutoComplete } from 'antd';\nimport ReactHtmlParser from \"react-html-parser\";\nimport { FormOutlined, DeleteOutlined, CloseSquareOutlined } from '@ant-design/icons'\nimport { useSelector, useDispatch } from 'react-redux'\nimport FormEditProject from '../../../components/Forms/FormEditProject.js/FormEditProject';\nimport { NavLink } from 'react-router-dom';\n\n\n\nexport default function ProjectManagement(props) {\n    //Lấy dữ liệu từ reducer về component\n    const projectList = useSelector(state => state.ProjectCyberBugsReducer.projectList);\n\n    const { userSearch } = useSelector(state => state.UserLoginCyberBugsReducer)\n\n    const [value, setValue] = useState('');\n\n    const searchRef = useRef(null);\n\n    //Sử dụng useDispatch để gọi action\n    const dispatch = useDispatch();\n    const [state, setState] = useState({\n        filteredInfo: null,\n        sortedInfo: null,\n    });\n\n    useEffect(() => {\n        dispatch({ type: 'GET_LIST_PROJECT_SAGA' })\n    }, [])\n\n    const handleChange = (pagination, filters, sorter) => {\n        console.log('Various parameters', pagination, filters, sorter);\n        setState({\n            filteredInfo: filters,\n            sortedInfo: sorter,\n        });\n    };\n\n    const clearFilters = () => {\n        setState({ filteredInfo: null });\n    };\n\n    const clearAll = () => {\n        setState({\n            filteredInfo: null,\n            sortedInfo: null,\n        });\n    };\n\n    const setAgeSort = () => {\n        setState({\n            sortedInfo: {\n                order: 'descend',\n                columnKey: 'age',\n            },\n        });\n    };\n\n    let { sortedInfo, filteredInfo } = state;\n    sortedInfo = sortedInfo || {};\n    filteredInfo = filteredInfo || {};\n    const columns = [\n        {\n            title: 'id',\n            dataIndex: 'id',\n            key: 'id',\n            sorter: (item2, item1) => {\n                return item2.id - item1.id;\n            },\n            sortDirections: ['descend'],\n\n        },\n        {\n            title: 'projectName',\n            dataIndex: 'projectName',\n            key: 'projectName',\n            render: (text, record, index) => {\n                return <NavLink to={`/projectdetail/${record.id}`} >{text}</NavLink >\n            },\n            sorter: (item2, item1) => {\n                let projectName1 = item1.projectName?.trim().toLowerCase();\n                let projectName2 = item2.projectName?.trim().toLowerCase();\n                if (projectName2 < projectName1) {\n                    return -1;\n                }\n                return 1;\n            },\n\n\n        },\n        // {\n        //     title: 'description',\n        //     dataIndex: 'description',\n        //     key: 'description',\n        //     render: (text, record, index) => {\n        //         let contentJSX = ReactHtmlParser(text);\n\n        //         return <div>\n        //             {contentJSX}\n        //         </div>\n        //     }\n        // },\n\n        {\n            title: 'category',\n            dataIndex: 'categoryName',\n            key: 'categoryName',\n            sorter: (item2, item1) => {\n                let categoryName1 = item1.categoryName?.trim().toLowerCase();\n                let categoryName2 = item2.categoryName?.trim().toLowerCase();\n                if (categoryName2 < categoryName1) {\n                    return -1;\n                }\n                return 1;\n            },\n\n        },\n        {\n            title: 'creator',\n            // dataIndex: 'creator',\n            key: 'creator',\n            render: (text, record, index) => {\n                return <Tag color=\"green\">{record.creator?.name}</Tag>\n            },\n            sorter: (item2, item1) => {\n                let creator1 = item1.creator?.name.trim().toLowerCase();\n                let creator2 = item2.creator?.name.trim().toLowerCase();\n                if (creator2 < creator1) {\n                    return -1;\n                }\n                return 1;\n            },\n\n        },\n        {\n            title: 'members',\n            key: 'members',\n            render: (text, record, index) => {\n                return <div>\n                    {record.members?.slice(0, 3).map((member, index) => {\n                        return (\n                            <Popover key={index} placement='top' title='members' content={() => {\n                                return <table className='table'>\n                                    <thead>\n                                        <tr>\n                                            <th>Id</th>\n                                            <th>avatar</th>\n                                            <th>name</th>\n                                            <th></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {record.members?.map((item, index) => {\n                                            return <tr key={index}>\n                                                <td>{item.userId}</td>\n                                                <td><img src={item.avatar} width=\"30\" height=\"30\" style={{ borderRadius: '15px' }} alt='index' /></td>\n                                                <td>{item.name}</td>\n                                                <td>\n                                                    <button onClick={() => {\n                                                        dispatch({\n                                                            type: 'REMOVE_USER_PROJECT_API',\n                                                            userProject: {\n                                                                userId: item.userId,\n                                                                projectId: record.id\n                                                            }\n                                                        })\n                                                    }} className='btn btn-danger' style={{ borderRadius: '50%' }}>X</button>\n                                                </td>\n                                            </tr>\n                                        })}\n                                    </tbody>\n                                </table>\n                            }}>\n                                <Avatar key={index} src={member.avatar} />\n                            </Popover>\n                        )\n                    })}\n\n                    {record.members?.length > 3 ? <Avatar>...</Avatar> : ''}\n\n                    <Popover placement=\"rightTop\" title={\"Add User\"} content={() => {\n                        return <AutoComplete\n\n                            options={userSearch?.map((user, index) => {\n                                return { label: user.name, value: user.userId.toString() }\n                            })}\n\n                            value={value}\n\n                            onChange={(text) => {\n                                setValue(text);\n                            }}\n\n                            onSelect={(valueSelect, option) => {\n                                //set giá trị của hộp thoại = option.label\n                                setValue(option.label);\n                                // Gọi api gửi về back-end (thêm user tham gia project)\n                                dispatch({\n                                    type: 'ADD_USER_PROJECT_API',\n                                    userProject: {\n                                        \"projectId\": record.id,\n                                        \"userId\": valueSelect\n                                    }\n                                })\n                            }}\n                            style={{ width: '100%' }} onSearch={(value) => {\n                                // kiểm tra xem có khác lần trước ko, khác thì sẽ hủy thời gian 300ms trước đó\n                                if (searchRef.current) {\n                                    clearTimeout(searchRef.current);\n                                }\n                                // đợi gõ nội dung xong sau 0.3s thì mới dispatch\n                                searchRef.current = setTimeout(() => {\n                                    dispatch({\n                                        type: 'GET_USER_API',\n                                        keyWord: value\n                                    })\n                                }, 300)\n                            }} />\n                    }} trigger=\"click\">\n                        <Button style={{ borderRadius: '50%' }}>+</Button>\n                    </Popover>\n                </div>\n            }\n\n        },\n\n        {\n            title: 'Action',\n            dataIndex: '',\n            key: 'x',\n            render: (text, record, index) => {\n                return <div>\n                    <button className=\"btn mr-2 btn-primary\" onClick={() => {\n                        const action = {\n                            type: 'OPEN_FORM_EDIT_PROJECT',\n                            title: 'Edit Project',\n                            Component: <FormEditProject />,\n                        }\n\n                        //dispatch lên reducer nội dung drawer\n                        dispatch(action);\n                        //dispatch dữ liệu dòng hiện tai lên reducer\n                        const actionEditProject = {\n                            type: 'EDIT_PROJECT',\n                            projectEditModel: record\n                        }\n                        dispatch(actionEditProject);\n                    }}>\n                        <FormOutlined style={{ fontSize: 17 }} />\n                    </button>\n                    <Popconfirm\n                        title=\"Are you sure to delete this project?\"\n                        onConfirm={() => {\n                            dispatch({ type: 'DELETE_PROJECT_SAGA', idProject: record.id })\n                        }}\n\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <button className=\"btn btn-danger\">\n                            <DeleteOutlined style={{ fontSize: 17 }} />\n                        </button>\n                    </Popconfirm>\n\n                </div>\n            },\n        }\n    ];\n    return (\n        <div className=\"container-fluid m-5\">\n            <h3>Project management</h3>\n            <Space style={{ marginBottom: 16 }}>\n                <Button onClick={setAgeSort}>Sort age</Button>\n                <Button onClick={clearFilters}>Clear filters</Button>\n                <Button onClick={clearAll}>Clear filters and sorters</Button>\n            </Space>\n            <Table columns={columns} rowKey={\"id\"} dataSource={projectList} onChange={handleChange} />\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { Drawer, Form, Button, Col, Row, Input, Select, DatePicker } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\n\nexport default function DrawerCyberBugs(props) {\n\n\n\n    const { visible, ComponentContentDrawer, callBackSubmit, title } = useSelector(state => state.drawerReducer);\n\n    const dispatch = useDispatch();\n\n    console.log('visible', visible)\n\n\n    const showDrawer = () => {\n        dispatch({ type: 'OPEN_DRAWER' });\n    };\n\n    const onClose = () => {\n        dispatch({ type: 'CLOSE_DRAWER' });\n\n    };\n    return (\n        <>\n            {/* <button onClick={showDrawer}>showdrawer</button> */}\n            <Drawer\n                title={title}\n                width={720}\n                onClose={onClose}\n                visible={visible}\n                bodyStyle={{ paddingBottom: 80 }}\n\n                footer={\n                    <div\n                        style={{\n                            textAlign: 'right',\n                        }}\n                    >\n                        <Button onClick={onClose} style={{ marginRight: 8 }}>\n                            Cancel\n                        </Button>\n                        <Button onClick={callBackSubmit} type=\"primary\">\n                            Submit\n                        </Button>\n                    </div>\n                }\n            >\n                {/* Nội dung thay đổi của drawer */}\n                {ComponentContentDrawer}\n\n            </Drawer>\n        </>\n    )\n}\n","import React, { useRef, useState } from 'react';\r\nimport { useSpring, animated } from 'react-spring'\r\nimport './DemoDragDrop.css'\r\n\r\nconst defaultValue = [\r\n    { id: 1, taskName: 'Task 1' },\r\n    { id: 2, taskName: 'Task 2' },\r\n    { id: 3, taskName: 'Task 3' },\r\n    { id: 4, taskName: 'Task 4' },\r\n    { id: 5, taskName: 'Task 5' },\r\n]\r\n\r\nexport default function DemoDragDrop(props) {\r\n\r\n    const [taskList, setTaskList] = useState(defaultValue);\r\n    const tagDrag = useRef({});\r\n    const tagDragEnter = useRef({});\r\n\r\n    // Animation\r\n    const [propsSpring, set, stop] = useSpring(() => ({\r\n        from: {\r\n            bottom: -25\r\n        },\r\n        to: {\r\n            bottom: 0\r\n        },\r\n        config: {\r\n            duration: 250\r\n        },\r\n        reset: true\r\n    }));\r\n\r\n    const handleDragStart = (e, task, index) => {\r\n        console.log(e.target) //lấy thẻ element\r\n        console.log(task) //lấy item trong defaultValue\r\n        // console.log('index', index) //lấy vị trí index của item\r\n        // Lưu lại giá trị của task đang drag\r\n        tagDrag.current = task;\r\n    }\r\n\r\n    const handleDragEnter = (e, taskDragEnter, index) => {\r\n        // console.log('dragEnterTag', e.target)\r\n        // console.log('targetOver', taskDragEnter)\r\n        // console.log('index', index)\r\n        // Lưu lại giá trị của task được kéo ngang qua\r\n        set({ bottom: 0 });\r\n        tagDragEnter.current = { ...taskDragEnter };\r\n\r\n        let taskListUpdate = [...taskList];\r\n        // Lấy ra index thằng đang kéo\r\n        let indexDragTag = taskListUpdate.findIndex(task => task.id === tagDrag.current.id);\r\n        // Lấy ra index thằng bị keo qua\r\n        let indexDragEnter = taskListUpdate.findIndex(task => task.id === taskDragEnter.id);\r\n        // Swap\r\n        let temp = taskListUpdate[indexDragTag];\r\n        taskListUpdate[indexDragTag] = taskListUpdate[indexDragEnter];\r\n        taskListUpdate[indexDragEnter] = temp;\r\n        setTaskList(taskListUpdate);\r\n    }\r\n\r\n    const handleDragEnd = (e) => {\r\n\r\n    }\r\n\r\n    const handleDrop = (e) => {\r\n        // console.log('drop', e.target)\r\n    }\r\n\r\n    // draggable: cho phép kéo đi được\r\n    return (\r\n        <div className='container' onDragOver={(e) => {\r\n            e.stopPropagation()\r\n            e.preventDefault()\r\n        }} onDrop={(e) => {\r\n            tagDrag.current = {};\r\n            setTaskList([...taskList]);\r\n        }}>\r\n            <div className='text-center display-4'>Task list</div>\r\n            <div className='row'>\r\n                <div className='col-2'></div>\r\n                <div className='bg-dark p-5 col-8'>\r\n                    {taskList.map((task, index) => {\r\n\r\n                        let cssDragTag = task.id === tagDrag.current.id ? 'dragTag' : '';\r\n                        if (task.id === tagDragEnter.current.id) {\r\n                            return <animated.div\r\n                                style={{\r\n                                    position: 'relative',\r\n                                    bottom: propsSpring.bottom.interpolate(numBottom => `${numBottom}px`)\r\n                                }}\r\n                                onDragStart={(e) => { handleDragStart(e, task, index) }}\r\n                                onDragEnter={(e) => { handleDragEnter(e, task, index) }}\r\n                                onDragEnd={(e) => { handleDragEnd(e) }}\r\n                                draggable=\"true\"\r\n                                key={index}\r\n                                className={`bg-success text-white m-1 p-3`}\r\n                            >\r\n                                {task.taskName}\r\n                            </animated.div>\r\n                        }\r\n\r\n                        return <div\r\n                            onDragStart={(e) => { handleDragStart(e, task, index) }}\r\n                            onDragEnter={(e) => { handleDragEnter(e, task, index) }}\r\n                            onDragEnd={(e) => { handleDragEnd(e) }}\r\n                            draggable=\"true\"\r\n                            key={index}\r\n                            className={`bg-success text-white m-1 p-3 ${cssDragTag}`}>\r\n                            {task.taskName}\r\n                        </div>\r\n                    })}\r\n                </div>\r\n                <div\r\n                    className='col-2 bg-primary'\r\n                    style={{ height: 500 }}\r\n                    onDragOver={(e) => {\r\n                        e.stopPropagation()\r\n                        e.preventDefault()\r\n                    }}\r\n                    onDrop={(e) => { handleDrop(e) }}\r\n                >\r\n                    okelah\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport _ from 'lodash'\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd'\r\n\r\nexport default function DragAndDropDnD() {\r\n\r\n    const [state, setState] = useState({\r\n        toDo: {\r\n            id: 'toDo',\r\n            items: [\r\n                { id: '1', taskName: 'Task 1' },\r\n                { id: '2', taskName: 'Task 2' },\r\n                { id: '3', taskName: 'Task 3' },\r\n            ]\r\n        },\r\n        inProgress: {\r\n            id: 'inProgress',\r\n            items: [\r\n                { id: '4', taskName: 'Task 4' },\r\n                { id: '5', taskName: 'Task 5' },\r\n                { id: '6', taskName: 'Task 6' },\r\n            ]\r\n        },\r\n        done: {\r\n            id: 'done',\r\n            items: [\r\n                { id: '7', taskName: 'Task 7' },\r\n                { id: '8', taskName: 'Task 8' },\r\n                { id: '9', taskName: 'Task 9' },\r\n            ]\r\n        }\r\n    })\r\n\r\n    const handleDragEnd = (result) => {\r\n        let { destination, source } = result;\r\n\r\n        if (!destination) {\r\n            return;\r\n        }\r\n\r\n        if (destination.index === source.index && destination.droppableId === source.droppableId) {\r\n            return;\r\n        }\r\n\r\n        // tạo ra 1 tag drag\r\n        let itemCopy = state[source.droppableId].items[source.index]\r\n        console.log('itemCopy', itemCopy)\r\n\r\n        // Droppable bắt đầu kéo\r\n        let index = state[source.droppableId].items.findIndex(item => item.id == itemCopy.id);\r\n\r\n        state[source.droppableId].items.splice(index, 1);\r\n        // Droppable thả vào\r\n        let dropDestination = state[destination.droppableId].items;\r\n\r\n        dropDestination.splice(destination.index, 0, itemCopy);\r\n\r\n        setState(state);\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <h3 className='text-center display-4'>Demo DraggAndDropp DND</h3>\r\n\r\n            <DragDropContext onDragEnd={handleDragEnd}>\r\n\r\n                <div className='row'>\r\n                    {_.map(state, (statusTask, index) => {\r\n                        return <Droppable droppableId={statusTask.id} key={index}>\r\n                            {(provided) => {\r\n                                return <div className='col-4'>\r\n                                    <div className='bg-dark p-5'\r\n                                        key={index}\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.droppableProps}\r\n                                    >\r\n                                        <h3 className='text-white'>{statusTask.id}</h3>\r\n                                        {statusTask.items.map((item, index) => {\r\n                                            return <Draggable key={item.id} index={index} draggableId={item.id}>\r\n                                                {(provided) => {\r\n                                                    return <div\r\n                                                        ref={provided.innerRef}\r\n                                                        {...provided.draggableProps}\r\n                                                        {...provided.dragHandleProps}\r\n                                                        className='mt-2 p-2 bg-white text-center'\r\n                                                    >\r\n                                                        {item.taskName}\r\n                                                    </div>\r\n                                                }}\r\n                                            </Draggable>\r\n                                        })}\r\n\r\n                                        {provided.placeholder}\r\n                                    </div>\r\n                                </div>\r\n                            }}\r\n                        </Droppable>\r\n                    })}\r\n                </div>\r\n\r\n            </DragDropContext>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, NavLink, Route, Switch, useHistory } from 'react-router-dom';\nimport LoadingComponent from './components/GlobalSetting/LoadingComponent/LoadingComponent';\nimport Header from './components/Home/Header/Header';\nimport Modal from './HOC/Modal/Modal';\nimport About from './pages/About/About';\nimport BaiTapToDoListSaga from './pages/BaiTapToDoListSaga/BaiTapToDoListSaga';\nimport Contact from './pages/Contact/Contact';\nimport LoginCyberBugs from './pages/CyberBugs/LoginCyberBugs/LoginCyberBugs';\nimport DemoHOCModal from './pages/DemoHOCModal/DemoHOCModal';\nimport Detail from './pages/Detail/Detail';\nimport Home from './pages/Home/Home';\nimport Login from './pages/Login/Login';\nimport PageNotFound from './pages/PageNotFound/PageNotFound';\nimport Profile from './pages/Profile/Profile';\nimport Todolist from './pages/Todolist/Todolist';\nimport ToDoListRedux from './pages/Todolist/ToDoListRedux';\nimport TodolistRFC from './pages/Todolist/TodolistRFC';\nimport { HomeTemplate } from './templates/HomeTemplate/HomeTemplate';\nimport { UserLoginTemplate } from './templates/HomeTemplate/UserLoginTemplate';\nimport { useDispatch } from 'react-redux';\nimport { CyberbugsTemplate } from './templates/HomeTemplate/CyberbugsTemplate';\nimport indexCyberBugs from './pages/CyberBugs/ProjectDetail/indexCyberBugs';\nimport CreateProject from './pages/CyberBugs/CreateProject/CreateProject';\nimport ProjectManagement from './pages/CyberBugs/ProjectManagement/ProjectManagement';\nimport DrawerCyberBugs from './HOC/CyberbugsHOC/DrawerCyberBugs';\nimport NotificationComponent from './components/Notification/NotificationComponent';\nimport DemoDragDrop from './pages/DemoDragDrop/DemoDragDrop';\nimport DragAndDropDnD from './pages/DragAndDropDnD/DragAndDropDnD';\n\nfunction App() {\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({ type: 'ADD_HISTORY', history: history });\n  }, [])\n\n\n  return (\n    <div>\n      {/* <Modal /> */}\n      <LoadingComponent />\n      <DrawerCyberBugs />\n      <Switch>\n\n        {/* <Route exact path='/home'  render={(propsRoute)=>{\n          return <div>\n                <Header />\n                <Home {...propsRoute} />\n          </div>\n        }}/> */}\n\n        <HomeTemplate path=\"/home\" exact Component={Home} />\n        <HomeTemplate exact path='/contact' Component={Contact} />\n        <HomeTemplate exact path='/about' Component={About} />\n        <HomeTemplate exact path='/dragdrop' Component={DemoDragDrop} />\n        <UserLoginTemplate exact path='/login' Component={LoginCyberBugs} />\n        <HomeTemplate exact path='/detail/:id' Component={Detail} />\n        <HomeTemplate exact path='/profile' Component={Profile} />\n        <HomeTemplate exact path='/todolistrfc' Component={TodolistRFC} />\n        <HomeTemplate exact path='/todolistrcc' Component={Todolist} />\n        <HomeTemplate exact path='/todolistredux' Component={ToDoListRedux} />\n        <HomeTemplate exact path='/todolistsaga' Component={BaiTapToDoListSaga} />\n        <HomeTemplate exact path='/demohocmodal' Component={DemoHOCModal} />\n        <HomeTemplate exact path='/demodragdropdnd' Component={DragAndDropDnD} />\n        <CyberbugsTemplate exact path='/cyberbugs' Component={indexCyberBugs} />\n        <CyberbugsTemplate exact path='/createproject' Component={CreateProject} />\n        <CyberbugsTemplate exact path='/projectmanagement' Component={ProjectManagement} />\n        {/* Trang chi tiết project */}\n        <CyberbugsTemplate exact path='/projectdetail/:projectId' Component={indexCyberBugs} />\n        {/* localhost:3000 */}\n        <CyberbugsTemplate exact path='/' Component={ProjectManagement} />\n        <HomeTemplate path=\"*\" Component={PageNotFound} />\n\n      </Switch>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { USER_SIGNIN_API } from \"../constants/Cyberbugs/Cyberbugs\";\nimport { GET_TASK_API } from \"../constants/ToDoListConst\"\n\n\nconst initialState = {\n    taskList:[]\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n\n    case GET_TASK_API:\n        state.taskList = action.taskList;\n        return { ...state }\n\n    default:\n        return state\n    }\n}\n","import { DISPLAY_LOADING, HIDE_LOADING } from \"../constants/LoadingConst\";\n\nconst initialState = {\n    isLoading:false\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n\n    case DISPLAY_LOADING:\n        state.isLoading = true;\n        return { ...state }\n    case HIDE_LOADING:{\n        state.isLoading=false;\n        return {...state}\n    }\n    default:\n        return state\n    }\n}\n","import React from 'react'\n\nconst stateDefault = {\n    Component: <p>Nội dung mặc định</p>\n}\n\n\nexport const ModalReducer = (state = stateDefault,action) => {\n    switch(action.type) {\n        case 'OPEN_FORM' : {\n            state.Component = action.Component;\n            return {...state}\n        }\n\n\n        default : return {...state}\n    }\n}","import Axios from \"axios\";\nimport { DOMAIN } from \"../util/constants/settingSystem\"\n\nexport class ToDoListService {\n    constructor(){\n\n    }\n\n    getTaskApi = () => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/GetAllTask`,\n            method: 'GET'\n        })\n    }\n\n    addTaskApi = (taskName) => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/addTask`,\n            method: 'POST',\n            data: {\n                taskName:taskName\n            }\n        })\n    }\n\n    deleteTaskApi = (taskName) => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/deleteTask?taskName=${taskName}`,\n            method: 'DELETE',\n        })\n    }\n\n    checkDoneTask = (taskName) => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/doneTask?taskName=${taskName}`,\n            method: 'PUT',\n        })\n    }\n\n    rejectTask = (taskName) => {\n        return Axios({\n            url: `${DOMAIN}/ToDoList/rejectTask?taskName=${taskName}`,\n            method: 'PUT',\n        })\n    }\n\n}\n\nexport const toDoListService = new ToDoListService();\n\n","import Axios from 'axios'\nimport { call, delay, fork, take, takeEvery, takeLatest, put } from 'redux-saga/effects'\nimport { ADD_TASK_API, CHECK_TASK_API, DELETE_TASK_API, GET_TASKLIST_API, GET_TASK_API, REJECT_TASK_API } from '../constants/ToDoListConst';\nimport { toDoListService } from '../../services/ToDoListService'\nimport { STATUS_CODE } from '../../util/constants/settingSystem';\nimport { DISPLAY_LOADING, HIDE_LOADING } from '../constants/LoadingConst';\n/*redux 2 loại action: \n    Loại 1: action => object (action thường)\n    Loại 2: action => function (thường dùng để xử lý api hoặc gọi các action khác )\n*/\n\n/*\n    01/01/2020 Khải viết chức năng getTask\n    Action saga lấy danh sách task từ api \n*/\nfunction* getTaskApiAction(action) {\n    //put giống dispatch action\n    yield put({\n        type: DISPLAY_LOADING\n    })\n    try {\n        let { data, status } = yield call(toDoListService.getTaskApi)\n        yield delay(300);\n        if (status === STATUS_CODE.SUCCESS) {\n            //Sau khi lấy giá trị thành công dùng put (giống dispatch bên thunk) \n            yield put({\n                type: GET_TASK_API,\n                taskList: data\n            });\n        } else {\n            console.log('error')\n        }\n    }\n    catch (err) {\n        console.log('err')\n    }\n    yield put({\n        type: HIDE_LOADING\n    })\n\n}\n\nexport function* theoDoiActionGetTaskApi() {\n    yield takeLatest(GET_TASKLIST_API, getTaskApiAction)\n}\n\n/*\n    01/01/2020 Khải viết chức năng addTask\n    Action saga nghiệp vụ thêm task\n*/\n\nfunction* addTaskApiAction(action) {\n    const { taskName } = action;\n    //Gọi api\n    try {\n        const { data, status } = yield call(() => { return toDoListService.addTaskApi(taskName) });\n        if (status === STATUS_CODE.SUCCESS) {\n            yield put({\n                type: GET_TASKLIST_API\n            })\n        }\n\n    } catch (err) {\n        console.log(err);\n    }\n    //Hiển thị loading\n    //thành công thì load lại task = cách gọi lại action saga load tasklist\n}\n\nexport function* theoDoiActionAddTaskApi() {\n    yield takeLatest(ADD_TASK_API, addTaskApiAction)\n}\n\n/*\n    01/01/2020 Khải viết chức năng deleteTask\n    Action saga nghiệp vụ xóa task\n*/\n\nfunction* deleteTaskApi(action) {\n    console.log(action)\n    const { taskName } = action;\n    try {\n        //Gọi api deletetask\n        const { data, status } = yield call(() => {\n            return toDoListService.deleteTaskApi(taskName);\n        });\n\n        if (status === STATUS_CODE.SUCCESS) {\n            //Nếu thành công thì gọi lại action GET_TASKLIST_API(action saga thực thi)\n            yield put({\n                type: GET_TASKLIST_API,\n            })\n        }\n\n    } catch (err) {\n        console.log(err);\n    }\n}\n\n\n\nexport function* theoDoiActionDeleteTask() {\n    yield takeLatest(DELETE_TASK_API, deleteTaskApi)\n}\n\n\n\n/*\n    01/01/2020 Khải viết chức năng deleteTask\n    Action saga thực hiện nghiệp vụ done task\n*/\n\nfunction* checkDoneTaskApi(action) {\n    const { taskName } = action;\n\n    try {\n        const { data, status } = yield call(() => {\n            return toDoListService.checkDoneTask(taskName);\n        });\n        if (status === STATUS_CODE.SUCCESS) {\n            yield put({\n                type: GET_TASKLIST_API\n            })\n        }\n    } catch (error) {\n        console.log(error);\n    }\n\n}\n\n\n\nexport function* theoDoiDoneTask() {\n    yield takeLatest(CHECK_TASK_API, checkDoneTaskApi)\n}\n\n\n\n/*\n    01/01/2020 Khải viết chức năng deleteTask\n    Action saga thực hiện nghiệp vụ reject task\n*/\nexport function* rejectTaskApi(action) {\n    const { taskName } = action;\n\n    try{\n        const {data,status} = yield call (()=>{\n            return toDoListService.rejectTask(taskName);\n        })\n        \n        if(status === STATUS_CODE.SUCCESS) {\n            yield put ({\n                type:GET_TASKLIST_API\n            })\n        }\n    }catch(err) {\n        console.log(err)\n    }\n\n\n}\n\n\nexport function* theoDoiRejectTask() {\n    yield takeLatest(REJECT_TASK_API, rejectTaskApi)\n}\n\n","export const DISPLAY_LOADING = 'DISPLAY_LOADING';\nexport const HIDE_LOADING = 'HIDE_LOADING';","const { default: Axios } = require(\"axios\")\nconst { DOMAIN_CYBERBUG, TOKEN } = require(\"../util/constants/settingSystem\")\n\nexport const cyberbugsService = { \n    signinCyberBugs: (userLogin) => {\n       return Axios({\n            url:`${DOMAIN_CYBERBUG}/users/signin`,\n            method:'POST',\n            data: userLogin\n        }) \n    },\n    getAllProjectCategory: () => {\n        return Axios({\n            url:`${DOMAIN_CYBERBUG}/ProjectCategory`,\n            method: 'GET'\n        })\n    },\n    createProject: (newProject) => {\n        return Axios({\n            url:`${DOMAIN_CYBERBUG}/Project/createProject`,\n            method:'POST',\n            data:newProject\n        })\n    },\n    createProjectAuthorization : (newProject) => {\n        console.log(localStorage.getItem(TOKEN))\n        return Axios({\n            url: `${DOMAIN_CYBERBUG}/Project/createProjectAuthorize`,\n            method:'POST',\n            data:newProject,\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //JWT \n        })\n    },\n    getListProject: () => {\n        return Axios({\n            url:`${DOMAIN_CYBERBUG}/Project/getAllProject`,\n            method:'GET',\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\n        })\n    },\n    updateProject: (projectUpdate) => { \n        return Axios({\n            url:`${DOMAIN_CYBERBUG}/Project/updateProject?projectId=${projectUpdate.id}`,\n            method:'PUT',\n            data:projectUpdate,\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\n        })\n    }\n}\n\n\n\n","import Axios from \"axios\"\nimport { DOMAIN_CYBERBUG, TOKEN } from \"../util/constants/settingSystem\"\n\nexport class baseService {\n\n    //put json về phía backend\n    put = (url,model) => {\n        return  Axios({\n            url:`${DOMAIN_CYBERBUG}/${url}`,\n            method:'PUT',\n            data:model,\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //JWT\n        }) \n    }\n\n    post = (url,model) => {\n        return Axios({\n            url:`${DOMAIN_CYBERBUG}/${url}`,\n            method:'POST',\n            data:model,\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //JWT\n        }) \n    }\n\n\n    get = (url) => {\n        return Axios({\n            url:`${DOMAIN_CYBERBUG}/${url}`,\n            method:'GET',\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\n        })\n    }\n\n    delete = (url) => {\n        return Axios({\n            url:`${DOMAIN_CYBERBUG}/${url}`,\n            method:'DELETE',\n            headers: {'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)} //token yêu cầu từ backend chứng minh user đã đăng nhập rồi\n        })\n    }\n}","import { baseService } from \"./baseService\";\n\nexport class UserService extends baseService {\n\n    constructor() {\n        super();\n    }\n\n    getUser = (keyWord) => {\n        return this.get(`Users/getUser?keyword=${keyWord}`);\n    }\n\n    assignUserProject = (userProject) => {\n        return this.post(`Project/assignUserProject`, userProject);\n    }\n\n    deleteUserFromProject = (userProject) => {\n        return this.post(`Project/removeUserFromProject`, userProject);\n    }\n\n    getUserByProjectId = (idProject) => {\n        return this.get(`Users/getUserByProjectId?idProject=${idProject}`);\n    }\n}\n\nexport const userService = new UserService();","import Axios from 'axios';\nimport { call, delay, fork, take, takeEvery, takeLatest, put, select } from 'redux-saga/effects';\nimport { cyberbugsService } from '../../../services/CyberbugsService';\nimport { USER_SIGNIN_API, USLOGIN } from '../../constants/Cyberbugs/Cyberbugs';\nimport { DISPLAY_LOADING, HIDE_LOADING } from '../../constants/LoadingConst';\nimport { STATUS_CODE, TOKEN, USER_LOGIN } from '../../../util/constants/settingSystem'\n\nimport { history } from '../../../util/history';\nimport { userService } from '../../../services/UserService';\nimport { GET_USER_BY_PROJECT_ID, GET_USER_BY_PROJECT_ID_SAGA } from '../../constants/Cyberbugs/UserConstants';\n\n//Quản lý các action saga\nfunction* signinSaga(action) {\n    // console.log(action);\n    yield put({\n        type: DISPLAY_LOADING\n    })\n    yield delay(500);\n\n    //Gọi api \n    try {\n        const { data, status } = yield call(() => cyberbugsService.signinCyberBugs(action.userLogin));\n\n        //Lưu vào localstorage khi đăng nhập thành công\n        localStorage.setItem(TOKEN, data.content.accessToken);\n        localStorage.setItem(USER_LOGIN, JSON.stringify(data.content));\n\n\n        yield put({\n            type: USLOGIN,\n            userLogin: data.content\n        })\n\n        // let history = yield select(state=> state.HistoryReducer.history)\n\n        history.push('/cyberbugs');\n\n    } catch (err) {\n        console.log(err.response.data)\n    }\n\n\n    yield put({\n        type: HIDE_LOADING\n    })\n\n}\n\n\nexport function* theoDoiSignin() {\n    yield takeLatest(USER_SIGNIN_API, signinSaga);\n}\n\n\n\n\n//Quản lý các action saga\nfunction* getUserSaga(action) {\n\n    //action.keyWord\n\n    //Gọi api \n    try {\n        const { data, status } = yield call(() => userService.getUser(action.keyWord));\n\n        yield put({\n            type: 'GET_USER_SEARCH',\n            lstUserSearch: data.content\n        })\n\n    } catch (err) {\n        console.log(err.response.data)\n    }\n}\n\n\n\nexport function* theoDoiGetUser() {\n    yield takeLatest(\"GET_USER_API\", getUserSaga);\n}\n\nfunction* addUserProjectSaga(action) {\n\n    //action.keyWord\n\n    //Gọi api \n    try {\n        const { data, status } = yield call(() => userService.assignUserProject(action.userProject));\n\n        // gọi lại hàm get list project\n        yield put({\n            type: 'GET_LIST_PROJECT_SAGA'\n        })\n\n    } catch (err) {\n        console.log(err.response.data)\n    }\n}\n\n\n\nexport function* theoDoiAddUserProject() {\n    yield takeLatest(\"ADD_USER_PROJECT_API\", addUserProjectSaga);\n}\n\n\n\n//\nfunction* removeUserProjectSaga(action) {\n\n    //action.keyWord\n\n    //Gọi api \n    try {\n        const { data, status } = yield call(() => userService.deleteUserFromProject(action.userProject));\n\n        // gọi lại hàm get list project\n        yield put({\n            type: 'GET_LIST_PROJECT_SAGA'\n        })\n\n    } catch (err) {\n        console.log(err.response.data)\n    }\n}\n\n\n\nexport function* theoDoiRemoveUserProject() {\n    yield takeLatest(\"REMOVE_USER_PROJECT_API\", removeUserProjectSaga);\n}\n\n\n//\nfunction* getUserByProjectIdSaga(action) {\n\n    const { idProject } = action;\n    try {\n        const { data, status } = yield call(() => userService.getUserByProjectId(idProject));\n        if (status === STATUS_CODE.SUCCESS) {\n            yield put({\n                type: GET_USER_BY_PROJECT_ID,\n                arrUser: data.content\n            })\n        }\n\n    } catch (err) {\n        console.log(err);\n        console.log(err.response?.data);\n        // Trường hợp chưa có user nào hết thì để mảng rỗng\n        if (err.response?.data.statusCode === STATUS_CODE.NOT_FOUND) {\n            yield put({\n                type: GET_USER_BY_PROJECT_ID,\n                arrUser: []\n            })\n        }\n    }\n}\n\nexport function* theoDoiGetUserByProjectIdSaga() {\n    yield takeLatest(GET_USER_BY_PROJECT_ID_SAGA, getUserByProjectIdSaga);\n}\n","import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { cyberbugsService } from \"../../../services/CyberbugsService\";\nimport { STATUS_CODE } from \"../../../util/constants/settingSystem\";\nimport { GET_ALL_PROJECT_CATEGORY, GET_ALL_PROJECT_CATEGORY_SAGA } from \"../../constants/Cyberbugs/Cyberbugs\";\n\nfunction* getAllProjectCategorySaga(action) {\n    console.log('actionSaga', action);\n\n    try {\n\n        //Gọi api lấy dữ liệu về\n        const { data, status } = yield call(() => cyberbugsService.getAllProjectCategory());\n\n\n\n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUS_CODE.SUCCESS) {\n            yield put({\n                type: GET_ALL_PROJECT_CATEGORY,\n                data: data.content\n            });\n        }\n\n\n    } catch (err) {\n        console.log(err);\n    }\n\n}\n\n\n\n\n\nexport function* theoDoigetAllProjectCategory() {\n    yield takeLatest(GET_ALL_PROJECT_CATEGORY_SAGA, getAllProjectCategorySaga);\n}","import { baseService } from \"./baseService\";\n\nexport class ProjectService extends baseService {\n\n    constructor() {\n        super();\n    }\n\n    getAllProject = () => {\n        return this.get(`Project/getAllProject`);\n    }\n\n    deleteProject = (id) => {\n        return this.delete(`Project/deleteProject?projectId=${id}`);\n    }\n\n    getProjectDetail = (projectId) => {\n        return this.get(`Project/getProjectDetail?id=${projectId}`);\n    }\n}\n\n\nexport const projectService = new ProjectService();\n","import { notification } from \"antd\"\n\nexport const notifiFunction = (type, message, description = '') => {\n    notification[type]({ //action.typeNotification = success | warning | info | error,\n        message: message,\n        description: description\n    })\n}","import { call, delay, put, takeLatest } from \"redux-saga/effects\";\nimport { cyberbugsService } from \"../../../services/CyberbugsService\";\nimport { STATUS_CODE } from \"../../../util/constants/settingSystem\";\nimport { DISPLAY_LOADING, HIDE_LOADING } from \"../../constants/LoadingConst\";\nimport { history } from '../../../util/history';\nimport { projectService } from \"../../../services/ProjectService\";\nimport { notifiFunction } from \"../../../util/Notification/notificationCyberbugs\";\nimport { GET_ALL_PROJECT, GET_ALL_PROJECT_SAGA } from \"../../constants/Cyberbugs/ProjectCyberBugsConstants\";\nimport { GET_USER_BY_PROJECT_ID_SAGA } from \"../../constants/Cyberbugs/UserConstants\";\nfunction* createProjectSaga(action) {\n\n    console.log('actionCreateProject', action)\n    //HIỂN THỊ LOADING\n    yield put({\n        type: DISPLAY_LOADING\n    })\n    yield delay(500);\n\n    try {\n\n        //Gọi api lấy dữ liệu về\n        const { data, status } = yield call(() => cyberbugsService.createProjectAuthorization(action.newProject));\n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUS_CODE.SUCCESS) {\n            console.log(data)\n\n            history.push('/projectmanagement');\n        }\n\n\n    } catch (err) {\n        console.log(err);\n    }\n\n    yield put({\n        type: HIDE_LOADING\n    })\n}\n\n\n\n\n\nexport function* theoDoiCreateProjectSaga() {\n    yield takeLatest('CREATE_PROJECT_SAGA', createProjectSaga);\n}\n\n\n\n\n//Saga dùng để get all project từ api \n//Khải - Code ngày dd/MM/yyyy\n\nfunction* getListProjectSaga(action) {\n\n    try {\n        const { data, status } = yield call(() => cyberbugsService.getListProject());\n\n        //Sau khi lấy dữ liệu từ api về thành công\n        if (status === STATUS_CODE.SUCCESS) {\n            yield put({\n                type: 'GET_LIST_PROJECT',\n                projectList: data.content\n            })\n        }\n    } catch (err) {\n        console.log(err)\n    }\n\n}\n\nexport function* theoDoiGetListProjectSaga() {\n    yield takeLatest('GET_LIST_PROJECT_SAGA', getListProjectSaga);\n}\n\n//UpdateProject\nfunction* updateProjectSaga(action) {\n    // console.log('action123',action);\n    // return;\n    //HIỂN THỊ LOADING\n    yield put({\n        type: DISPLAY_LOADING\n    })\n    yield delay(500);\n\n    try {\n\n\n        const { data, status } = yield call(() => cyberbugsService.updateProject(action.prjectUpdate));\n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUS_CODE.SUCCESS) {\n            console.log(data)\n\n            // history.push('/projectmanagement');\n        }\n        // yield put({\n        //     type:'GET_LIST_PROJECT_SAGA'\n        // })\n        yield call(getListProjectSaga);\n        yield put({\n            type: 'CLOSE_DRAWER'\n        })\n    } catch (err) {\n        console.log(err);\n    }\n\n    yield put({\n        type: HIDE_LOADING\n    })\n}\n\n\nexport function* theoDoiUpdateProjectSaga() {\n    yield takeLatest('UPDATE_PROJECT_SAGA', updateProjectSaga);\n}\n\nfunction* deleteProjectSaga(action) {\n    // console.log('action123',action);\n    // return;\n    //HIỂN THỊ LOADING\n    yield put({\n        type: DISPLAY_LOADING\n    })\n    yield delay(500);\n\n    try {\n        const { data, status } = yield call(() => projectService.deleteProject(action.idProject));\n        //Gọi api thành công thì dispatch lên reducer thông qua put\n        if (status === STATUS_CODE.SUCCESS) {\n            console.log(data)\n\n            notifiFunction('success', 'Delete project successfully !')\n\n            // history.push('/projectmanagement');\n        } else {\n            notifiFunction('error', 'Delete project fail !')\n        }\n        // yield put({\n        //     type:'GET_LIST_PROJECT_SAGA'\n        // })\n        yield call(getListProjectSaga);\n        yield put({\n            type: 'CLOSE_DRAWER'\n        })\n    } catch (err) {\n        notifiFunction('error', 'Delete project fail !')\n        console.log(err);\n    }\n\n    yield put({\n        type: HIDE_LOADING\n    })\n}\n\n\nexport function* theoDoiDeleteProject() {\n    yield takeLatest('DELETE_PROJECT_SAGA', deleteProjectSaga);\n}\n\nfunction* getProjectDetailSaga(action) {\n   \n    yield delay(500);\n    try {\n        \n        const { data, status } = yield call(() => projectService.getProjectDetail(action.projectId));\n        console.log(data);\n        // Lấy dữ liệu thành công\n        yield put({\n            type: 'PUT_PROJECT_DETAIL',\n            projectDetail: data.content\n        })\n\n    } catch (err) {\n        console.log('404 not found!');\n        history.push('/projectmanagement');\n    }\n}\n\n\nexport function* theoDoiGetProjectDetail() {\n    yield takeLatest('GET_PROJECT_DETAIL', getProjectDetailSaga);\n}\n\n\n\nfunction* getProjectAllSaga(action) {\n    yield put({\n        type: DISPLAY_LOADING\n    })\n    yield delay(500);\n\n    try {\n        const { data, status } = yield call(() => projectService.getAllProject());\n\n        yield put({\n            type: GET_ALL_PROJECT,\n            arrProject: data.content\n        })\n\n        yield put({\n            type: GET_USER_BY_PROJECT_ID_SAGA,\n            idProject: data.content[0].id\n        })\n\n    } catch (err) {\n        console.log('404 not found!')\n        history.push('/projectmanagement');\n    }\n    yield put({\n        type: HIDE_LOADING\n    })\n}\n\nexport function* theoDoiGetAllProjectSaga() {\n    yield takeLatest(GET_ALL_PROJECT_SAGA, getProjectAllSaga);\n}\n","import { baseService } from \"./baseService\";\r\n\r\nexport class TaskTypeService extends baseService {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    getAllTaskType = () => {\r\n        return this.get(`TaskType/getAll`);\r\n    }\r\n\r\n}\r\n\r\nexport const taskTypeService = new TaskTypeService();","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { taskTypeService } from \"../../../services/TaskTypeService\";\r\nimport { GET_ALL_TASK_TYPE, GET_ALL_TASK_TYPE_SAGA } from '../../constants/Cyberbugs/TaskTypeConstants';\r\n\r\nfunction* getAllTaskTypeSaga(action) {\r\n\r\n    try {\r\n\r\n        const { data, status } = yield call(() => taskTypeService.getAllTaskType());\r\n        yield put({\r\n            type: GET_ALL_TASK_TYPE,\r\n            arrTaskType: data.content\r\n        })\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n\r\n}\r\n\r\nexport function* theoDoiGetAllTaskTypeSaga() {\r\n    yield takeLatest(GET_ALL_TASK_TYPE_SAGA, getAllTaskTypeSaga);\r\n}","import { baseService } from \"./baseService\";\r\n\r\nexport class PriorityService extends baseService {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    getAllPriority = () => {\r\n        return this.get(`Priority/getAll`);\r\n    }\r\n}\r\n\r\n\r\nexport const priorityService = new PriorityService();\r\n","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { priorityService } from \"../../../services/PriorityService\";\r\nimport { GET_ALL_PRIORITY, GET_ALL_PRIORITY_SAGA } from '../../constants/Cyberbugs/PriorityConstants';\r\n\r\nfunction* getAllPrioritySaga(action) {\r\n\r\n    try {\r\n\r\n        const { data, status } = yield call(() => priorityService.getAllPriority());\r\n        yield put({\r\n            type: GET_ALL_PRIORITY,\r\n            arrPriority: data.content\r\n        })\r\n\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n\r\n}\r\n\r\nexport function* theoDoiGetAllPriority() {\r\n    yield takeLatest(GET_ALL_PRIORITY_SAGA, getAllPrioritySaga);\r\n}","import { baseService } from \"./baseService\";\r\n\r\nexport class TaskService extends baseService {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    createTask = (taskObject) => {\r\n        return this.post('Project/createTask', taskObject);\r\n    }\r\n\r\n    getTaskDetail = (taskId) => {\r\n        return this.get(`Project/getTaskDetail?taskId=${taskId}`);\r\n    }\r\n\r\n    updateStatusTask = (taskStatusUpdate) => {\r\n        return this.put('Project/updateStatus', taskStatusUpdate);\r\n    }\r\n\r\n    updateTask = (taskUpdate) => {\r\n        return this.post(`Project/updateTask`, taskUpdate);\r\n    }\r\n}\r\n\r\nexport const taskService = new TaskService();","import { call, put, takeLatest, select } from 'redux-saga/effects'\r\nimport { taskService } from '../../../services/TaskService'\r\nimport { STATUS_CODE } from '../../../util/constants/settingSystem';\r\nimport { DISPLAY_LOADING, HIDE_LOADING } from '../../constants/LoadingConst';\r\nimport { notifiFunction } from '../../../util/Notification/notificationCyberbugs';\r\nimport { GET_TASK_DETAIL_SAGA, GET_TASK_DETAIL, UPDATE_STATUS_TASK, UPDATE_STATUS_TASK_SAGA, UPDATE_TASK_SAGA, HANDLE_CHANGE_POST_API_SAGA, CHANGE_TASK_MODAL, CHANGE_ASSIGNESS, REMOVE_USER_ASSIGN } from '../../constants/Cyberbugs/TaskConstants'\r\n\r\nfunction* createTaskSaga(action) {\r\n    try {\r\n\r\n        yield put({\r\n            type: DISPLAY_LOADING\r\n        })\r\n        const { data, status } = yield call(() => taskService.createTask(action.taskObject));\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            console.log(data);\r\n        }\r\n        yield put({\r\n            type: 'CLOSE_DRAWER'\r\n        })\r\n        notifiFunction('success', 'Create task successfully!');\r\n\r\n    } catch (err) {\r\n        console.log(err.response.data)\r\n    }\r\n\r\n    yield put({\r\n        type: HIDE_LOADING\r\n    })\r\n}\r\n\r\nexport function* theoDoiCreateTaskSaga() {\r\n    yield takeLatest('CREATE_TASK_SAGA', createTaskSaga);\r\n}\r\n\r\nfunction* getTaskDetailSaga(action) {\r\n\r\n    const { taskId } = action;\r\n\r\n    try {\r\n        const { data, status } = yield call(() => taskService.getTaskDetail(taskId));\r\n        yield put({\r\n            type: GET_TASK_DETAIL,\r\n            taskDetailModal: data.content\r\n        })\r\n\r\n    } catch (err) {\r\n        console.log(err)\r\n        console.log(err.response?.data)\r\n    }\r\n}\r\n\r\nexport function* theoDoiGetTaskDetailSaga() {\r\n    yield takeLatest(GET_TASK_DETAIL_SAGA, getTaskDetailSaga);\r\n}\r\n\r\nfunction* updateTaskStatusSaga(action) {\r\n\r\n    const { taskUpdateStatus } = action;\r\n\r\n    try {\r\n        // Cập nhật API status cho task hiện tại (Task đang mở modal)\r\n        const { data, status } = yield call(() => taskService.updateStatusTask(taskUpdateStatus));\r\n        // Sau khi thành công gọi lại getProjectDetail saga để sắp xếp lại thông tin các task\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: 'GET_PROJECT_DETAIL',\r\n                projectId: taskUpdateStatus.projectId\r\n            })\r\n\r\n            yield put({\r\n                type: GET_TASK_DETAIL_SAGA,\r\n                taskId: taskUpdateStatus.taskId\r\n            })\r\n        }\r\n\r\n    } catch (err) {\r\n        console.log(err)\r\n        console.log(err.response?.data)\r\n    }\r\n}\r\n\r\nexport function* theoDoiUpdateTaskStatusSaga() {\r\n    yield takeLatest(UPDATE_STATUS_TASK_SAGA, updateTaskStatusSaga);\r\n}\r\n\r\nfunction* updateTaskSaga(action) {\r\n\r\n}\r\n\r\nexport function* theoDoiUpdateTask() {\r\n    yield takeLatest(UPDATE_TASK_SAGA, updateTaskSaga)\r\n}\r\n\r\nexport function* handleChangePostApi(action) {\r\n    // Gọi action làm thay đổi taskDetail modal\r\n    // eslint-disable-next-line default-case\r\n    switch (action.actionType) {\r\n        case CHANGE_TASK_MODAL: {\r\n            const { value, name } = action;\r\n            yield put({\r\n                type: CHANGE_TASK_MODAL,\r\n                name,\r\n                value\r\n            });\r\n        };break;\r\n\r\n        // eslint-disable-next-line no-fallthrough\r\n        case CHANGE_ASSIGNESS: {\r\n            const { userSelected } = action;\r\n            yield put({\r\n                type: CHANGE_ASSIGNESS,\r\n                userSelected\r\n            })\r\n        };break;\r\n\r\n        // eslint-disable-next-line no-fallthrough\r\n        case REMOVE_USER_ASSIGN: {\r\n            const { userId } = action;\r\n            yield put({\r\n                type: REMOVE_USER_ASSIGN,\r\n                userId\r\n            })\r\n        };break;\r\n    }\r\n\r\n    // Save qua api updateTaskSaga\r\n    // Lấy dữ liệu từ state.taskDetailModal\r\n    let { taskDetailModal } = yield select(state => state.TaskReducer);\r\n\r\n    // Biến đổi dữ liệu state.taskDetailModal thành dữ liệu api cần\r\n    const listUserAsign = taskDetailModal.assigness?.map((user, index) => {\r\n        return user.id;\r\n    })\r\n\r\n    const taskUpdateApi = { ...taskDetailModal, listUserAsign }\r\n\r\n    try {\r\n\r\n        const { data, status } = yield call(() => taskService.updateTask(taskUpdateApi));\r\n\r\n        if (status === STATUS_CODE.SUCCESS) {\r\n            yield put({\r\n                type: 'GET_PROJECT_DETAIL',\r\n                projectId: taskUpdateApi.projectId\r\n            })\r\n\r\n            yield put({\r\n                type: GET_TASK_DETAIL_SAGA,\r\n                taskId: taskUpdateApi.taskId\r\n            })\r\n        }\r\n    } catch (err) {\r\n        console.log(err.response?.data)\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nexport function* theoDoiHandleChangePostApi() {\r\n    yield takeLatest(HANDLE_CHANGE_POST_API_SAGA, handleChangePostApi)\r\n}","import { baseService } from \"./baseService\";\r\n\r\nexport class StatusService extends baseService {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    getAllStatus = () => {\r\n        return this.get('Status/getAll');\r\n    }\r\n}\r\n\r\n\r\nexport const statusService = new StatusService();\r\n","import { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { statusService } from '../../../services/StatusService';\r\nimport { GET_ALL_PRIORITY_SAGA } from '../../constants/Cyberbugs/PriorityConstants';\r\nimport { GET_ALL_STATUS } from '../../constants/Cyberbugs/StatusConstant';\r\n\r\nfunction* getAllStatusSaga(action) {\r\n    try {\r\n\r\n        const { data, status } = yield call(() => statusService.getAllStatus());\r\n\r\n        yield put({\r\n            type: GET_ALL_STATUS,\r\n            arrStatus: data.content\r\n        })\r\n\r\n\r\n    } catch (err) {\r\n        console.log(err.response?.data);\r\n    }\r\n}\r\n\r\nexport function* theoDoiGetAllStatusSaga() {\r\n    yield takeLatest(GET_ALL_PRIORITY_SAGA, getAllStatusSaga);\r\n}","import { all } from \"redux-saga/effects\";\nimport Todolist from \"../../pages/Todolist/Todolist\";\nimport TodolistRFC from \"../../pages/Todolist/TodolistRFC\";\nimport * as ToDoListSaga from './ToDoListSaga'\n// import {theoDoiActionGetTaskApi} from './ToDoListSaga'\nimport * as Cyberbugs from './Cyberbugs/UserCyberbugsSaga';\nimport * as ProjectCategorySaga from './Cyberbugs/ProjectCategorySaga';\nimport * as ProjectSaga from './Cyberbugs/ProjectSaga'\nimport * as TaskTypeSaga from './Cyberbugs/TaskTypeSaga'\nimport * as PrioritySaga from './Cyberbugs/PrioritySaga'\nimport * as TaskSaga from './Cyberbugs/TaskSaga'\nimport * as StatusSaga from './Cyberbugs/StatusSaga'\n\nexport function* rootSaga() {\n\n  yield all([\n    //Nghiệp vụ theo dõi các action saga todolist\n    ToDoListSaga.theoDoiActionGetTaskApi(),\n    ToDoListSaga.theoDoiActionAddTaskApi(),\n    ToDoListSaga.theoDoiActionDeleteTask(),\n    ToDoListSaga.theoDoiDoneTask(),\n    ToDoListSaga.theoDoiRejectTask(),\n\n    //Nghiệp vụ cyberbugs .... ,\n    Cyberbugs.theoDoiSignin(),\n    Cyberbugs.theoDoiGetUser(),\n    Cyberbugs.theoDoiAddUserProject(),\n    Cyberbugs.theoDoiRemoveUserProject(),\n    Cyberbugs.theoDoiGetUserByProjectIdSaga(),\n    ProjectCategorySaga.theoDoigetAllProjectCategory(),\n    ProjectSaga.theoDoiCreateProjectSaga(),\n    ProjectSaga.theoDoiGetListProjectSaga(),\n    ProjectSaga.theoDoiUpdateProjectSaga(),\n    ProjectSaga.theoDoiDeleteProject(),\n    ProjectSaga.theoDoiGetProjectDetail(),\n    ProjectSaga.theoDoiGetAllProjectSaga(),\n\n    StatusSaga.theoDoiGetAllStatusSaga(),\n\n    TaskTypeSaga.theoDoiGetAllTaskTypeSaga(),\n\n    PrioritySaga.theoDoiGetAllPriority(),\n    \n    TaskSaga.theoDoiCreateTaskSaga(),\n    TaskSaga.theoDoiGetTaskDetailSaga(),\n    TaskSaga.theoDoiUpdateTaskStatusSaga(),\n    TaskSaga.theoDoiHandleChangePostApi(),\n    TaskSaga.theoDoiUpdateTask()\n  ])\n}","\n\n\nconst historyState = {\n    history:{}\n};\n\n\n\nexport const HistoryReducer = (state = historyState,action) => {\n    switch(action.type) {\n        case 'ADD_HISTORY':{\n            state.history = action.history;\n            console.log(state.history);\n            return {...state}\n        }\n        default: return {...state}\n    }\n}","import { USLOGIN } from \"../constants/Cyberbugs/Cyberbugs\";\nimport { GET_USER_BY_PROJECT_ID } from \"../constants/Cyberbugs/UserConstants\";\n\nconst { USER_LOGIN } = require(\"../../util/constants/settingSystem\");\n\nlet usLogin = {};\n\nif (localStorage.getItem(USER_LOGIN)) {\n    usLogin = JSON.parse(localStorage.getItem(USER_LOGIN));\n}\n\nconst stateDefault = {\n    userLogin: usLogin,\n    userSearch: [],\n    arrUser: [] // Array user cho thẻ select create task\n}\n\nexport const UserLoginCyberBugsReducer = (state = stateDefault, action) => {\n    switch (action.type) {\n        case USLOGIN: {\n            state.userLogin = action.userLogin;\n            return { ...state }\n        }\n\n        case 'GET_USER_SEARCH': {\n            state.userSearch = action.lstUserSearch;\n            console.log('stateUser', state);\n            return { ...state }\n        }\n\n        case GET_USER_BY_PROJECT_ID: {\n            return { ...state, arrUser: action.arrUser }\n        }\n\n\n        default: return { ...state };\n    }\n}","import { GET_ALL_PROJECT_CATEGORY } from \"../constants/Cyberbugs/Cyberbugs\";\n\n\nconst stateDefault = {\n    arrProjectCategory : []\n}\n\n\n\n\nexport const ProjectCategoryReducer = (state = stateDefault,action) => {\n    switch(action.type){\n\n        case GET_ALL_PROJECT_CATEGORY: {\n            state.arrProjectCategory = action.data;\n            return {...state}\n        }\n\n\n        default : return {...state}\n    }\n}","import { GET_ALL_PROJECT } from \"../constants/Cyberbugs/ProjectCyberBugsConstants\";\n\n\nconst stateDefault = {\n    projectList: [],\n    arrProject: [] //Get all project cho dropdown\n}\n\n\n\n\nexport const ProjectCyberBugsReducer = (state = stateDefault, action) => {\n\n\n    switch (action.type) {\n\n        case 'GET_LIST_PROJECT': {\n            state.projectList = action.projectList;\n            console.log(\"projectList\", action.projectList)\n            return { ...state };\n        }\n\n        case GET_ALL_PROJECT: {\n            // state.arrProject = action.arrProject;\n            // return { ...state }\n\n            // viết tắt\n            return { ...state, arrProject: action.arrProject }\n        }\n\n        default: return { ...state }\n    }\n}","import React from 'react'\nconst initialState = {\n    visible: false,\n    title: '',\n    ComponentContentDrawer: <p>default</p>,\n    callBackSubmit: (propsValue) => { alert('click demo!') }\n}\n\nexport const drawerReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'OPEN_DRAWER':\n            return { ...state, visible: true }\n\n        case 'CLOSE_DRAWER':\n            return { ...state, visible: false }\n\n        case 'OPEN_FORM_EDIT_PROJECT': {\n            state.visible = true;\n            state.ComponentContentDrawer = action.Component;\n            state.title = action.title;\n            return { ...state }\n        }\n\n        case 'SET_SUBMIT_EDIT_PROJECT': {\n            state.callBackSubmit = action.submitFunction;\n            return { ...state };\n        }\n\n        case 'SET_SUBMIT_CREATE_TASK': {\n            return { ...state, callBackSubmit: action.submitFunction }\n        }\n\n        case 'OPEN_FORM_CREATE_TASK': {\n            state.visible = true;\n            state.title = action.title;\n            state.ComponentContentDrawer = action.Component;\n            return { ...state };\n        }\n\n        default:\n            return state\n    }\n}\n","\nconst initialState = {\n    projectEdit: {\n        \"id\": 0,\n        \"projectName\": \"string\",\n        \"creator\": 0,\n        \"description\": \"string\",\n        \"categoryId\": \"2\"\n    },\n    projectDetail: {}\n}\n\nexport const ProjectReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case 'EDIT_PROJECT': {\n            state.projectEdit = action.projectEditModel;\n            return { ...state }\n        }\n\n        case 'PUT_PROJECT_DETAIL': {\n            state.projectDetail = action.projectDetail;\n            return { ...state }\n        }\n\n        default:\n            return state\n    }\n}\n","import { GET_ALL_TASK_TYPE } from \"../constants/Cyberbugs/TaskTypeConstants\"\r\n\r\nconst initialState = {\r\n    arrTaskType: []\r\n}\r\n\r\nexport const TaskTypeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case GET_ALL_TASK_TYPE:\r\n            return { ...state, arrTaskType: action.arrTaskType }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { GET_ALL_PRIORITY } from '../constants/Cyberbugs/PriorityConstants'\r\n\r\nconst initialState = {\r\n    arrPriority: []\r\n}\r\n\r\nexport const PriorityReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case GET_ALL_PRIORITY:\r\n            return { ...state, arrPriority: action.arrPriority }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { GET_ALL_STATUS } from \"../constants/Cyberbugs/StatusConstant\"\r\n\r\nconst initialState = {\r\n    arrStatus: []\r\n}\r\n\r\nexport const StatusReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case GET_ALL_STATUS:\r\n            return { ...state, arrStatus: action.arrStatus }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { CHANGE_ASSIGNESS, CHANGE_TASK_MODAL, GET_TASK_DETAIL, REMOVE_USER_ASSIGN } from \"../constants/Cyberbugs/TaskConstants\"\r\n\r\nconst initialState = {\r\n    taskDetailModal: {\r\n        \"priorityTask\": {\r\n            \"priorityId\": 1,\r\n            \"priority\": \"High\"\r\n        },\r\n        \"taskTypeDetail\": {\r\n            \"id\": 1,\r\n            \"taskType\": \"bug\"\r\n        },\r\n        \"assigness\": [\r\n            {\r\n                \"id\": 68,\r\n                \"avatar\": \"https://ui-avatars.com/api/?name=khải\",\r\n                \"name\": \"khải\",\r\n                \"alias\": \"khai\"\r\n            },\r\n            {\r\n                \"id\": 69,\r\n                \"avatar\": \"https://ui-avatars.com/api/?name=thoa\",\r\n                \"name\": \"thoa\",\r\n                \"alias\": \"thoa\"\r\n            }\r\n        ],\r\n        \"lstComment\": [],\r\n        \"taskId\": 54,\r\n        \"taskName\": \"task 1\",\r\n        \"alias\": \"task-1\",\r\n        \"description\": \"<p>Before you start work on an issue, you can set a time or other type of estimate to calculate how much work you believe it'll take to resolve it. Once you've started to work on a specific issue, log time to keep a record of it.</p>\\n<p>&nbsp;</p>\\n<ul>\\n<li>Open the issue and select&nbsp;&bull;&bull;&bull; &gt;&nbsp;Time tracking</li>\\n<li>Fill in the<strong>&nbsp;Time Spent</strong>&nbsp;field</li>\\n<li>Fill in the <strong>Time Remaining</strong> field and click Save</li>\\n</ul>\\n<p>&nbsp;</p>\\n<h3><u>That's it!</u></h3>\\n<h1>💯💯</h1>\\n<p>&nbsp;</p>\",\r\n        \"statusId\": \"2\",\r\n        \"originalEstimate\": 30,\r\n        \"timeTrackingSpent\": 10,\r\n        \"timeTrackingRemaining\": 10,\r\n        \"typeId\": 1,\r\n        \"priorityId\": 1,\r\n        \"projectId\": 109\r\n    }\r\n}\r\n\r\n\r\nexport const TaskReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case GET_TASK_DETAIL: {\r\n            return { ...state, taskDetailModal: action.taskDetailModal }\r\n        }\r\n\r\n        case CHANGE_TASK_MODAL: {\r\n            const { name, value } = action;\r\n            return { ...state, taskDetailModal: { ...state.taskDetailModal, [name]: value } }\r\n        }\r\n\r\n        case CHANGE_ASSIGNESS: {\r\n            state.taskDetailModal.assigness = [...state.taskDetailModal.assigness, action.userSelected]\r\n            return { ...state }\r\n        }\r\n\r\n        case REMOVE_USER_ASSIGN: {\r\n            state.taskDetailModal.assigness = [...state.taskDetailModal.assigness.filter(us => us.id !== action.userId)]\r\n            return { ...state }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport ToDoListReducer from './reducers/ToDoListReducer'\nimport LoadingReducer from './reducers/LoadingReducer';\nimport { ModalReducer } from './reducers/ModalReducer'\nimport reduxThunk from 'redux-thunk'\n\n\n//middleware saga\nimport createMiddleWareSaga from 'redux-saga';\nimport { rootSaga } from './sagas/rootSaga';\nimport { HistoryReducer } from './reducers/HistoryReducer';\nimport { UserLoginCyberBugsReducer } from './reducers/UserCyberBugsReducer';\nimport { ProjectCategoryReducer } from './reducers/ProjectCategoryReducer';\nimport { ProjectCyberBugsReducer } from './reducers/ProjectCyberBugsReducer';\nimport { drawerReducer } from './reducers/DrawerCyberbugs';\nimport { ProjectReducer } from './reducers/ProjectReducer';\nimport { TaskTypeReducer } from './reducers/TaskTypeReducer';\nimport { PriorityReducer } from './reducers/PriorityReducer';\nimport { StatusReducer } from './reducers/StatusReducer';\nimport { TaskReducer } from './reducers/TaskReducer';\n\nconst middleWareSaga = createMiddleWareSaga();\nconst rootReducer = combineReducers({\n    //reducer khai báo tại đây\n    ToDoListReducer,\n    LoadingReducer,\n    ModalReducer,\n    HistoryReducer,\n    UserLoginCyberBugsReducer,\n    ProjectCategoryReducer,\n    ProjectCyberBugsReducer,\n    drawerReducer,\n    ProjectReducer,\n    TaskTypeReducer,\n    PriorityReducer,\n    StatusReducer,\n    TaskReducer\n})\n\nconst store = createStore(rootReducer, applyMiddleware(reduxThunk, middleWareSaga));\n\n//Gọi saga\nmiddleWareSaga.run(rootSaga);\n\n\nexport default store;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//setup redux\nimport store from './redux/configStore'\nimport { Provider } from 'react-redux';\nimport 'antd/dist/antd.css'; // or 'antd/dist/antd.less'\nimport { BrowserRouter,Router } from 'react-router-dom';\nimport {history} from './util/history'\n\n\nReactDOM.render(\n  <Router history={history}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>\n  ,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}